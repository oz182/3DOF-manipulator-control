
%% Find Position Xp

function [output] = Xp_solve(input)
tau1 = input(1);
tau2 = input(2);
tau3 = input(3);
L1 = input(4);
L2 = input(5);
L3 = input(6);
m1 = input(7);
m2 = input(8);
m3 = input(9);
I1_zz = input(10);
I2_zz = input(11);
I3_zz = input(12);
g = input(13);
%D1 = input(14);
%D2 = input(15);
%D3 = input(16);
q1 = input(14);
q2 = input(15);
q3 = input(16);
q1_p = input(17);
q2_p = input(18);
q3_p = input(19);
q1 = atan2(sin(q1),cos(q1));
q2 = atan2(sin(q2),cos(q2));
q3 = atan2(sin(q3),cos(q3));

%q1_pp = (3200*I2_zz*I3_zz*tau1 - 3200*I2_zz*I3_zz*tau2 + 800*I3_zz*L2^2*m2*tau1 + 800*I2_zz*L3^2*m3*tau1 - 800*I3_zz*L2^2*m2*tau2 + 3200*I3_zz*L2^2*m3*tau1 - 800*I2_zz*L3^2*m3*tau2 - 3200*I3_zz*L2^2*m3*tau2 + 400*L2^2*L3^2*m3^2*tau1 - 400*L2^2*L3^2*m3^2*tau2 + 200*L2^2*L3^2*m2*m3*tau1 - 200*L2^2*L3^2*m2*m3*tau2 - 400*L2^2*L3^2*m3^2*tau1*cos(2*q3) + 400*L2^2*L3^2*m3^2*tau2*cos(2*q3) - 3924*I3_zz*L1*L2^2*m2^2*cos(q1) - 3924*I2_zz*L1*L3^2*m3^2*cos(q1) - 15696*I3_zz*L1*L2^2*m3^2*cos(q1) + 3924*I2_zz*L1*L3^2*m3^2*cos(q1 + 2*q2 + 2*q3) + 3924*I3_zz*L1*L2^2*m2^2*cos(q1 + 2*q2) + 15696*I3_zz*L1*L2^2*m3^2*cos(q1 + 2*q2) - 15696*I2_zz*I3_zz*L1*m1*cos(q1) - 31392*I2_zz*I3_zz*L1*m2*cos(q1) - 31392*I2_zz*I3_zz*L1*m3*cos(q1) + 400*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) - 1962*L1*L2^2*L3^2*m1*m3^2*cos(q1) - 2943*L1*L2^2*L3^2*m2*m3^2*cos(q1) - 981*L1*L2^2*L3^2*m2^2*m3*cos(q1) - 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q2 + 2*q3) + 400*I3_zz*L1*L2^3*m2^2*q1_p^2*sin(q2) + 400*I3_zz*L1*L2^3*m2^2*q2_p^2*sin(q2) + 3200*I3_zz*L1*L2^3*m3^2*q1_p^2*sin(q2) + 3200*I3_zz*L1*L2^3*m3^2*q2_p^2*sin(q2) + 981*L1*L2^2*L3^2*m1*m3^2*cos(q1 - 2*q3) + 981*L1*L2^2*L3^2*m1*m3^2*cos(q1 + 2*q3) + 1962*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q2) + 981*L1*L2^2*L3^2*m2^2*m3*cos(q1 + 2*q2) + 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 - 2*q3) + 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q3) - 3924*I3_zz*L1*L2^2*m1*m2*cos(q1) - 3924*I2_zz*L1*L3^2*m1*m3*cos(q1) - 15696*I3_zz*L1*L2^2*m1*m3*cos(q1) - 7848*I2_zz*L1*L3^2*m2*m3*cos(q1) - 23544*I3_zz*L1*L2^2*m2*m3*cos(q1) + 15696*I3_zz*L1*L2^2*m2*m3*cos(q1 + 2*q2) - 800*L1*L2^2*L3*m3^2*tau3*cos(q2 + q3) - 400*L1*L2*L3^2*m3^2*tau2*cos(q2) + 400*L1*L2*L3^2*m3^2*tau3*cos(q2) - 1600*I2_zz*L1*L3*m3*tau3*cos(q2 + q3) + 400*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) + 1600*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) + 400*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) + 800*L1*L2^2*L3*m3^2*tau3*cos(q2 - q3) - 400*L1*L2*L3^2*m3^2*tau3*cos(q2 + 2*q3) + 400*I2_zz*L1*L3^3*m3^2*q1_p^2*sin(q2 + q3) + 400*I2_zz*L1*L3^3*m3^2*q2_p^2*sin(q2 + q3) + 400*I2_zz*L1*L3^3*m3^2*q3_p^2*sin(q2 + q3) - 1600*I3_zz*L1*L2*m2*tau2*cos(q2) + 1600*I3_zz*L1*L2*m2*tau3*cos(q2) - 3200*I3_zz*L1*L2*m3*tau2*cos(q2) + 3200*I3_zz*L1*L2*m3*tau3*cos(q2) + 800*I2_zz*L1*L3^3*m3^2*q1_p*q2_p*sin(q2 + q3) + 800*I2_zz*L1*L3^3*m3^2*q1_p*q3_p*sin(q2 + q3) + 800*I2_zz*L1*L3^3*m3^2*q2_p*q3_p*sin(q2 + q3) - 981*L1*L2^2*L3^2*m1*m2*m3*cos(q1) + 100*L1*L2^2*L3^3*m2*m3^2*q1_p^2*sin(q2 - q3) + 100*L1*L2^2*L3^3*m2*m3^2*q2_p^2*sin(q2 - q3) - 100*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 100*L1*L2^2*L3^3*m2*m3^2*q3_p^2*sin(q2 - q3) - 100*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2 + 2*q3) + 2400*I3_zz*L1*L2^3*m2*m3*q1_p^2*sin(q2) + 2400*I3_zz*L1*L2^3*m2*m3*q2_p^2*sin(q2) + 800*I3_zz*L1*L2^3*m2^2*q1_p*q2_p*sin(q2) + 6400*I3_zz*L1*L2^3*m3^2*q1_p*q2_p*sin(q2) + 800*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 + q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 + q3) + 400*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2) + 1600*I2_zz*I3_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) + 1600*I2_zz*I3_zz*L1*L3*m3*q2_p^2*sin(q2 + q3) + 1600*I2_zz*I3_zz*L1*L3*m3*q3_p^2*sin(q2 + q3) + 400*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 400*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2 + 2*q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 - q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 - q3) + 1600*I2_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 1600*I2_zz*I3_zz*L1*L2*m2*q2_p^2*sin(q2) + 3200*I2_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 3200*I2_zz*I3_zz*L1*L2*m3*q2_p^2*sin(q2) + 200*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) + 100*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) - 400*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 400*L1*L2*L3^2*m2*m3*tau3*cos(q2) - 100*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 1600*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) + 300*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2) + 100*L1*L2^3*L3^2*m2^2*m3*q1_p^2*sin(q2) + 300*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2) + 100*L1*L2^3*L3^2*m2^2*m3*q2_p^2*sin(q2) + 400*L1*L2^2*L3*m2*m3*tau3*cos(q2 - q3) + 600*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2) + 200*L1*L2^3*L3^2*m2^2*m3*q1_p*q2_p*sin(q2) + 200*L1*L2^2*L3^3*m2*m3^2*q1_p*q2_p*sin(q2 - q3) + 200*L1*L2^2*L3^3*m2*m3^2*q1_p*q3_p*sin(q2 - q3) - 200*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 200*L1*L2^2*L3^3*m2*m3^2*q2_p*q3_p*sin(q2 - q3) + 4800*I3_zz*L1*L2^3*m2*m3*q1_p*q2_p*sin(q2) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 + q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 + q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 + q3) + 400*I2_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m2*m3*q2_p^2*sin(q2) + 800*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2) + 3200*I2_zz*I3_zz*L1*L3*m3*q1_p*q2_p*sin(q2 + q3) + 3200*I2_zz*I3_zz*L1*L3*m3*q1_p*q3_p*sin(q2 + q3) + 3200*I2_zz*I3_zz*L1*L3*m3*q2_p*q3_p*sin(q2 + q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q2_p^2*sin(q2 - q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q3_p^2*sin(q2 - q3) + 800*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 - q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 - q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 - q3) + 3200*I2_zz*I3_zz*L1*L2*m2*q1_p*q2_p*sin(q2) + 6400*I2_zz*I3_zz*L1*L2*m3*q1_p*q2_p*sin(q2) + 800*I2_zz*L1*L2*L3^2*m2*m3*q1_p*q2_p*sin(q2) + 800*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q2_p*sin(q2 - q3) + 800*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q3_p*sin(q2 - q3) + 800*I3_zz*L1*L2^2*L3*m2*m3*q2_p*q3_p*sin(q2 - q3))/(50*(64*I1_zz*I2_zz*I3_zz + 16*I2_zz*I3_zz*L1^2*m1 + 16*I1_zz*I3_zz*L2^2*m2 + 64*I2_zz*I3_zz*L1^2*m2 + 16*I1_zz*I2_zz*L3^2*m3 + 64*I1_zz*I3_zz*L2^2*m3 + 64*I2_zz*I3_zz*L1^2*m3 + 8*I3_zz*L1^2*L2^2*m2^2 + 8*I1_zz*L2^2*L3^2*m3^2 + 8*I2_zz*L1^2*L3^2*m3^2 + 32*I3_zz*L1^2*L2^2*m3^2 - 8*I2_zz*L1^2*L3^2*m3^2*cos(2*q2 + 2*q3) + 2*L1^2*L2^2*L3^2*m1*m3^2 + 6*L1^2*L2^2*L3^2*m2*m3^2 + 2*L1^2*L2^2*L3^2*m2^2*m3 + 4*I3_zz*L1^2*L2^2*m1*m2 + 4*I2_zz*L1^2*L3^2*m1*m3 + 16*I3_zz*L1^2*L2^2*m1*m3 + 4*I1_zz*L2^2*L3^2*m2*m3 + 16*I2_zz*L1^2*L3^2*m2*m3 + 48*I3_zz*L1^2*L2^2*m2*m3 - 8*I3_zz*L1^2*L2^2*m2^2*cos(2*q2) - 32*I3_zz*L1^2*L2^2*m3^2*cos(2*q2) - 8*I1_zz*L2^2*L3^2*m3^2*cos(2*q3) - 32*I3_zz*L1^2*L2^2*m2*m3*cos(2*q2) + L1^2*L2^2*L3^2*m1*m2*m3 - 2*L1^2*L2^2*L3^2*m1*m3^2*cos(2*q3) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2) - 2*L1^2*L2^2*L3^2*m2^2*m3*cos(2*q2) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q3) + 2*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2 + 2*q3)));
%q2_pp = 3200*I2_zz*I3_zz*tau1 - 3200*I1_zz*I3_zz*tau2 + 3200*I1_zz*I3_zz*tau3 - 3200*I2_zz*I3_zz*tau2 - 800*I3_zz*L1^2*m1*tau2 + 800*I3_zz*L1^2*m1*tau3 - 3200*I3_zz*L1^2*m2*tau2 + 800*I3_zz*L2^2*m2*tau1 - 800*I1_zz*L3^2*m3*tau2 + 800*I2_zz*L3^2*m3*tau1 + 3200*I3_zz*L1^2*m2*tau3 - 3200*I3_zz*L1^2*m3*tau2 - 800*I3_zz*L2^2*m2*tau2 + 3200*I3_zz*L2^2*m3*tau1 + 800*I1_zz*L3^2*m3*tau3 - 800*I2_zz*L3^2*m3*tau2 + 3200*I3_zz*L1^2*m3*tau3 - 3200*I3_zz*L2^2*m3*tau2 - 400*L1^2*L3^2*m3^2*tau2 + 400*L2^2*L3^2*m3^2*tau1 + 400*L1^2*L3^2*m3^2*tau3 - 400*L2^2*L3^2*m3^2*tau2 - 200*L1^2*L3^2*m1*m3*tau2 + 200*L1^2*L3^2*m1*m3*tau3 - 800*L1^2*L3^2*m2*m3*tau2 + 200*L2^2*L3^2*m2*m3*tau1 + 800*L1^2*L3^2*m2*m3*tau3 - 200*L2^2*L3^2*m2*m3*tau2 + 7848*I3_zz*L1^2*L2*m2^2*cos(q1 + q2) + 3924*I1_zz*L2*L3^2*m3^2*cos(q1 + q2) + 15696*I3_zz*L1^2*L2*m3^2*cos(q1 + q2) - 400*L2^2*L3^2*m3^2*tau1*cos(2*q3) + 400*L2^2*L3^2*m3^2*tau2*cos(2*q3) - 3924*I3_zz*L1*L2^2*m2^2*cos(q1) - 3924*I2_zz*L1*L3^2*m3^2*cos(q1) - 15696*I3_zz*L1*L2^2*m3^2*cos(q1) + 3924*I2_zz*L1*L3^2*m3^2*cos(q1 + 2*q2 + 2*q3) + 15696*I1_zz*I3_zz*L2*m2*cos(q1 + q2) + 31392*I1_zz*I3_zz*L2*m3*cos(q1 + q2) + 400*L1^2*L3^2*m3^2*tau2*cos(2*q2 + 2*q3) - 400*L1^2*L3^2*m3^2*tau3*cos(2*q2 + 2*q3) - 7848*I3_zz*L1^2*L2*m2^2*cos(q1 - q2) + 3924*I3_zz*L1*L2^2*m2^2*cos(q1 + 2*q2) - 15696*I3_zz*L1^2*L2*m3^2*cos(q1 - q2) + 15696*I3_zz*L1*L2^2*m3^2*cos(q1 + 2*q2) - 15696*I2_zz*I3_zz*L1*m1*cos(q1) - 31392*I2_zz*I3_zz*L1*m2*cos(q1) - 31392*I2_zz*I3_zz*L1*m3*cos(q1) - 3924*I1_zz*L2*L3^2*m3^2*cos(q1 + q2 + 2*q3) + 400*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) - 1962*L1*L2^2*L3^2*m1*m3^2*cos(q1) - 2943*L1*L2^2*L3^2*m2*m3^2*cos(q1) - 981*L1*L2^2*L3^2*m2^2*m3*cos(q1) + 981*L1^2*L2*L3^2*m1*m3^2*cos(q2 - q1 + 2*q3) + 981*L1^2*L2*L3^2*m2*m3^2*cos(q2 - q1 + 2*q3) - 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q2 + 2*q3) + 3924*I1_zz*L2*L3^2*m2*m3*cos(q1 + q2) + 23544*I3_zz*L1^2*L2*m2*m3*cos(q1 + q2) + 400*I3_zz*L1*L2^3*m2^2*q1_p^2*sin(q2) + 1600*I3_zz*L1^3*L2*m2^2*q1_p^2*sin(q2) + 400*I3_zz*L1*L2^3*m2^2*q2_p^2*sin(q2) + 3200*I3_zz*L1*L2^3*m3^2*q1_p^2*sin(q2) + 3200*I3_zz*L1^3*L2*m3^2*q1_p^2*sin(q2) - 400*I1_zz*L2*L3^3*m3^2*q1_p^2*sin(q3) + 3200*I3_zz*L1*L2^3*m3^2*q2_p^2*sin(q2) - 400*I1_zz*L2*L3^3*m3^2*q2_p^2*sin(q3) - 400*I1_zz*L2*L3^3*m3^2*q3_p^2*sin(q3) - 981*L1^2*L2*L3^2*m1*m3^2*cos(q1 - q2) - 2943*L1^2*L2*L3^2*m2*m3^2*cos(q1 - q2) - 1962*L1^2*L2*L3^2*m2^2*m3*cos(q1 - q2) + 981*L1*L2^2*L3^2*m1*m3^2*cos(q1 - 2*q3) + 981*L1*L2^2*L3^2*m1*m3^2*cos(q1 + 2*q3) + 1962*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q2) + 981*L1*L2^2*L3^2*m2^2*m3*cos(q1 + 2*q2) + 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 - 2*q3) + 981*L1*L2^2*L3^2*m2*m3^2*cos(q1 + 2*q3) - 3924*I3_zz*L1*L2^2*m1*m2*cos(q1) - 3924*I2_zz*L1*L3^2*m1*m3*cos(q1) - 15696*I3_zz*L1*L2^2*m1*m3*cos(q1) - 7848*I2_zz*L1*L3^2*m2*m3*cos(q1) - 23544*I3_zz*L1*L2^2*m2*m3*cos(q1) - 3924*I3_zz*L1^2*L2*m1*m2*cos(q1 - q2) - 7848*I3_zz*L1^2*L2*m1*m3*cos(q1 - q2) - 23544*I3_zz*L1^2*L2*m2*m3*cos(q1 - q2) + 15696*I3_zz*L1*L2^2*m2*m3*cos(q1 + 2*q2) - 800*L1*L2^2*L3*m3^2*tau3*cos(q2 + q3) - 981*L1^2*L2*L3^2*m2*m3^2*cos(q1 + q2 + 2*q3) + 400*L1*L2*L3^2*m3^2*tau1*cos(q2) - 800*L1*L2*L3^2*m3^2*tau2*cos(q2) + 400*L1*L2*L3^2*m3^2*tau3*cos(q2) + 800*L1^2*L2*L3*m3^2*tau3*cos(q3) - 1600*I2_zz*L1*L3*m3*tau3*cos(q2 + q3) + 800*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) + 400*I3_zz*L1^2*L2^2*m2^2*q2_p^2*sin(2*q2) + 3200*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) - 400*I1_zz*L2^2*L3^2*m3^2*q1_p^2*sin(2*q3) + 1600*I3_zz*L1^2*L2^2*m3^2*q2_p^2*sin(2*q2) - 400*I1_zz*L2^2*L3^2*m3^2*q2_p^2*sin(2*q3) + 2943*L1^2*L2*L3^2*m2*m3^2*cos(q1 + q2) + 1962*L1^2*L2*L3^2*m2^2*m3*cos(q1 + q2) - 400*L1*L2*L3^2*m3^2*tau1*cos(q2 + 2*q3) + 800*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) + 800*L1*L2^2*L3*m3^2*tau3*cos(q2 - q3) - 400*L1*L2*L3^2*m3^2*tau3*cos(q2 + 2*q3) - 800*L1^2*L2*L3*m3^2*tau3*cos(2*q2 + q3) + 400*I2_zz*L1*L3^3*m3^2*q1_p^2*sin(q2 + q3) + 400*I2_zz*L1*L3^3*m3^2*q2_p^2*sin(q2 + q3) + 400*I2_zz*L1*L3^3*m3^2*q3_p^2*sin(q2 + q3) + 1600*I3_zz*L1*L2*m2*tau1*cos(q2) - 3200*I3_zz*L1*L2*m2*tau2*cos(q2) + 3200*I3_zz*L1*L2*m3*tau1*cos(q2) + 1600*I3_zz*L1*L2*m2*tau3*cos(q2) - 6400*I3_zz*L1*L2*m3*tau2*cos(q2) + 3200*I3_zz*L1*L2*m3*tau3*cos(q2) + 1600*I1_zz*L2*L3*m3*tau3*cos(q3) + 800*I2_zz*L1*L3^3*m3^2*q1_p*q2_p*sin(q2 + q3) + 800*I2_zz*L1*L3^3*m3^2*q1_p*q3_p*sin(q2 + q3) + 800*I2_zz*L1*L3^3*m3^2*q2_p*q3_p*sin(q2 + q3) - 981*L1*L2^2*L3^2*m1*m2*m3*cos(q1) + 100*L1*L2^2*L3^3*m2*m3^2*q1_p^2*sin(q2 - q3) - 100*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2 + 2*q3) + 100*L1*L2^2*L3^3*m2*m3^2*q2_p^2*sin(q2 - q3) - 100*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 100*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 200*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 100*L1*L2^2*L3^3*m2*m3^2*q3_p^2*sin(q2 - q3) - 100*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2 + 2*q3) + 100*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(2*q2 + q3) + 100*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(2*q2 + q3) + 400*I3_zz*L1^3*L2*m1*m2*q1_p^2*sin(q2) + 800*I3_zz*L1^3*L2*m1*m3*q1_p^2*sin(q2) + 2400*I3_zz*L1*L2^3*m2*m3*q1_p^2*sin(q2) + 4800*I3_zz*L1^3*L2*m2*m3*q1_p^2*sin(q2) + 2400*I3_zz*L1*L2^3*m2*m3*q2_p^2*sin(q2) + 800*I3_zz*L1*L2^3*m2^2*q1_p*q2_p*sin(q2) + 6400*I3_zz*L1*L2^3*m3^2*q1_p*q2_p*sin(q2) - 800*I1_zz*L2*L3^3*m3^2*q1_p*q2_p*sin(q3) - 800*I1_zz*L2*L3^3*m3^2*q1_p*q3_p*sin(q3) - 800*I1_zz*L2*L3^3*m3^2*q2_p*q3_p*sin(q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 + q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 + q3) - 981*L1^2*L2*L3^2*m1*m2*m3*cos(q1 - q2) + 400*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2) - 800*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) - 800*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) - 800*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(q3) + 1600*I2_zz*I3_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) + 1600*I2_zz*I3_zz*L1*L3*m3*q2_p^2*sin(q2 + q3) + 1600*I2_zz*I3_zz*L1*L3*m3*q3_p^2*sin(q2 + q3) - 400*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 400*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 400*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2 + 2*q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 - q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) + 800*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 - q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(2*q2 + q3) + 1600*I1_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 3200*I1_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 1600*I2_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 1600*I2_zz*I3_zz*L1*L2*m2*q2_p^2*sin(q2) + 3200*I2_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 3200*I2_zz*I3_zz*L1*L2*m3*q2_p^2*sin(q2) - 1600*I1_zz*I3_zz*L2*L3*m3*q1_p^2*sin(q3) - 1600*I1_zz*I3_zz*L2*L3*m3*q2_p^2*sin(q3) - 1600*I1_zz*I3_zz*L2*L3*m3*q3_p^2*sin(q3) - 100*L1^2*L2^2*L3^2*m1*m3^2*q1_p^2*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) + 200*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) - 100*L1^2*L2^2*L3^2*m1*m3^2*q2_p^2*sin(2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q3) + 200*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2) + 100*L1^2*L2^2*L3^2*m2^2*m3*q2_p^2*sin(2*q2) - 200*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q3) + 400*L1*L2*L3^2*m2*m3*tau1*cos(q2) - 800*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 400*L1*L2*L3^2*m2*m3*tau3*cos(q2) + 400*L1^2*L2*L3*m1*m3*tau3*cos(q3) + 1200*L1^2*L2*L3*m2*m3*tau3*cos(q3) - 100*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 3200*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) + 1600*I3_zz*L1^2*L2^2*m2*m3*q2_p^2*sin(2*q2) + 100*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2) + 300*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2) + 100*L1*L2^3*L3^2*m2^2*m3*q1_p^2*sin(q2) - 100*L1^2*L2*L3^3*m1*m3^2*q1_p^2*sin(q3) + 600*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2) + 400*L1^3*L2*L3^2*m2^2*m3*q1_p^2*sin(q2) + 300*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2) + 100*L1*L2^3*L3^2*m2^2*m3*q2_p^2*sin(q2) - 100*L1^2*L2*L3^3*m1*m3^2*q2_p^2*sin(q3) - 300*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(q3) - 100*L1^2*L2*L3^3*m1*m3^2*q3_p^2*sin(q3) - 300*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(q3) - 300*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(q3) + 800*I3_zz*L1^2*L2^2*m2^2*q1_p*q2_p*sin(2*q2) + 3200*I3_zz*L1^2*L2^2*m3^2*q1_p*q2_p*sin(2*q2) - 800*I1_zz*L2^2*L3^2*m3^2*q1_p*q2_p*sin(2*q3) + 400*L1*L2^2*L3*m2*m3*tau3*cos(q2 - q3) - 400*L1^2*L2*L3*m2*m3*tau3*cos(2*q2 + q3) + 600*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2) + 200*L1*L2^3*L3^2*m2^2*m3*q1_p*q2_p*sin(q2) - 200*L1^2*L2*L3^3*m1*m3^2*q1_p*q2_p*sin(q3) - 200*L1^2*L2*L3^3*m1*m3^2*q1_p*q3_p*sin(q3) - 600*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(q3) - 200*L1^2*L2*L3^3*m1*m3^2*q2_p*q3_p*sin(q3) - 600*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(q3) - 600*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(q3) + 200*L1*L2^2*L3^3*m2*m3^2*q1_p*q2_p*sin(q2 - q3) + 200*L1*L2^2*L3^3*m2*m3^2*q1_p*q3_p*sin(q2 - q3) - 200*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 200*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) + 200*L1*L2^2*L3^3*m2*m3^2*q2_p*q3_p*sin(q2 - q3) + 200*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(2*q2 + q3) + 200*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 4800*I3_zz*L1*L2^3*m2*m3*q1_p*q2_p*sin(q2) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 + q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 + q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 + q3) + 400*I1_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 400*I2_zz*L1*L2*L3^2*m2*m3*q2_p^2*sin(q2) - 400*I3_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) - 400*I3_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) - 1200*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) - 400*I3_zz*L1^2*L2*L3*m1*m3*q3_p^2*sin(q3) - 1200*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) - 1200*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(q3) + 800*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2) - 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) - 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(q3) - 1600*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(q3) + 3200*I2_zz*I3_zz*L1*L3*m3*q1_p*q2_p*sin(q2 + q3) + 3200*I2_zz*I3_zz*L1*L3*m3*q1_p*q3_p*sin(q2 + q3) + 3200*I2_zz*I3_zz*L1*L3*m3*q2_p*q3_p*sin(q2 + q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q2_p^2*sin(q2 - q3) + 400*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) + 400*I3_zz*L1*L2^2*L3*m2*m3*q3_p^2*sin(q2 - q3) + 400*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) + 400*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(2*q2 + q3) + 800*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 - q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 - q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) + 1600*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 - q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(2*q2 + q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 3200*I2_zz*I3_zz*L1*L2*m2*q1_p*q2_p*sin(q2) + 6400*I2_zz*I3_zz*L1*L2*m3*q1_p*q2_p*sin(q2) - 3200*I1_zz*I3_zz*L2*L3*m3*q1_p*q2_p*sin(q3) - 3200*I1_zz*I3_zz*L2*L3*m3*q1_p*q3_p*sin(q3) - 3200*I1_zz*I3_zz*L2*L3*m3*q2_p*q3_p*sin(q3) - 200*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q2_p*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2) + 200*L1^2*L2^2*L3^2*m2^2*m3*q1_p*q2_p*sin(2*q2) - 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q3) + 100*L1^3*L2*L3^2*m1*m2*m3*q1_p^2*sin(q2) + 3200*I3_zz*L1^2*L2^2*m2*m3*q1_p*q2_p*sin(2*q2) + 800*I2_zz*L1*L2*L3^2*m2*m3*q1_p*q2_p*sin(q2) - 800*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) - 800*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q3_p*sin(q3) - 2400*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) - 800*I3_zz*L1^2*L2*L3*m1*m3*q2_p*q3_p*sin(q3) - 2400*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(q3) - 2400*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(q3) + 800*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q2_p*sin(q2 - q3) + 800*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q3_p*sin(q2 - q3) + 800*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) + 800*I3_zz*L1*L2^2*L3*m2*m3*q2_p*q3_p*sin(q2 - q3) + 800*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(2*q2 + q3) + 800*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(2*q2 + q3);
%q3_pp = -(3200*I1_zz*I3_zz*tau2 - 3200*I1_zz*I2_zz*tau3 - 3200*I1_zz*I3_zz*tau3 - 800*I2_zz*L1^2*m1*tau3 + 800*I3_zz*L1^2*m1*tau2 - 800*I1_zz*L2^2*m2*tau3 - 3200*I2_zz*L1^2*m2*tau3 - 800*I3_zz*L1^2*m1*tau3 + 3200*I3_zz*L1^2*m2*tau2 - 3200*I1_zz*L2^2*m3*tau3 + 800*I1_zz*L3^2*m3*tau2 - 3200*I2_zz*L1^2*m3*tau3 - 3200*I3_zz*L1^2*m2*tau3 + 3200*I3_zz*L1^2*m3*tau2 - 800*I1_zz*L3^2*m3*tau3 - 3200*I3_zz*L1^2*m3*tau3 - 400*L1^2*L2^2*m2^2*tau3 - 1600*L1^2*L2^2*m3^2*tau3 + 400*L1^2*L3^2*m3^2*tau2 - 400*L1^2*L3^2*m3^2*tau3 - 200*L1^2*L2^2*m1*m2*tau3 - 800*L1^2*L2^2*m1*m3*tau3 + 200*L1^2*L3^2*m1*m3*tau2 - 2400*L1^2*L2^2*m2*m3*tau3 - 200*L1^2*L3^2*m1*m3*tau3 + 800*L1^2*L3^2*m2*m3*tau2 - 800*L1^2*L3^2*m2*m3*tau3 - 7848*I3_zz*L1^2*L2*m2^2*cos(q1 + q2) - 3924*I1_zz*L2*L3^2*m3^2*cos(q1 + q2) - 15696*I3_zz*L1^2*L2*m3^2*cos(q1 + q2) + 400*L1^2*L2^2*m2^2*tau3*cos(2*q2) + 1600*L1^2*L2^2*m3^2*tau3*cos(2*q2) - 15696*I1_zz*I3_zz*L2*m2*cos(q1 + q2) - 31392*I1_zz*I3_zz*L2*m3*cos(q1 + q2) - 400*L1^2*L3^2*m3^2*tau2*cos(2*q2 + 2*q3) + 400*L1^2*L3^2*m3^2*tau3*cos(2*q2 + 2*q3) + 7848*I3_zz*L1^2*L2*m2^2*cos(q1 - q2) + 15696*I3_zz*L1^2*L2*m3^2*cos(q1 - q2) + 7848*I1_zz*L2^2*L3*m3^2*cos(q1 + q2 + q3) + 7848*I2_zz*L1^2*L3*m3^2*cos(q1 + q2 + q3) + 15696*I1_zz*I2_zz*L3*m3*cos(q1 + q2 + q3) - 7848*I1_zz*L2^2*L3*m3^2*cos(q1 + q2 - q3) - 7848*I2_zz*L1^2*L3*m3^2*cos(q2 - q1 + q3) + 3924*I1_zz*L2*L3^2*m3^2*cos(q1 + q2 + 2*q3) + 400*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 400*I2_zz*L1^2*L3^2*m3^2*q2_p^2*sin(2*q2 + 2*q3) + 400*I2_zz*L1^2*L3^2*m3^2*q3_p^2*sin(2*q2 + 2*q3) - 981*L1^2*L2*L3^2*m1*m3^2*cos(q2 - q1 + 2*q3) - 981*L1^2*L2*L3^2*m2*m3^2*cos(q2 - q1 + 2*q3) - 3924*I1_zz*L2*L3^2*m2*m3*cos(q1 + q2) - 23544*I3_zz*L1^2*L2*m2*m3*cos(q1 + q2) - 1600*I3_zz*L1^3*L2*m2^2*q1_p^2*sin(q2) - 3200*I3_zz*L1^3*L2*m3^2*q1_p^2*sin(q2) + 400*I1_zz*L2*L3^3*m3^2*q1_p^2*sin(q3) + 1600*I1_zz*L2^3*L3*m3^2*q1_p^2*sin(q3) + 400*I1_zz*L2*L3^3*m3^2*q2_p^2*sin(q3) + 1600*I1_zz*L2^3*L3*m3^2*q2_p^2*sin(q3) + 400*I1_zz*L2*L3^3*m3^2*q3_p^2*sin(q3) + 1600*L1^2*L2^2*m2*m3*tau3*cos(2*q2) + 981*L1^2*L2*L3^2*m1*m3^2*cos(q1 - q2) + 2943*L1^2*L2*L3^2*m2*m3^2*cos(q1 - q2) + 1962*L1^2*L2*L3^2*m2^2*m3*cos(q1 - q2) - 981*L1^2*L2^2*L3*m2^2*m3*cos(q1 + q2 + q3) + 3924*I3_zz*L1^2*L2*m1*m2*cos(q1 - q2) + 7848*I3_zz*L1^2*L2*m1*m3*cos(q1 - q2) + 23544*I3_zz*L1^2*L2*m2*m3*cos(q1 - q2) + 800*L1*L2^2*L3*m3^2*tau1*cos(q2 + q3) - 800*L1*L2^2*L3*m3^2*tau2*cos(q2 + q3) + 7848*I2_zz*L1^2*L3*m2*m3*cos(q1 + q2 + q3) + 1962*L1^2*L2^2*L3*m1*m3^2*cos(q1 - q2 + q3) - 1962*L1^2*L2^2*L3*m1*m3^2*cos(q2 - q1 + q3) - 1962*L1^2*L2^2*L3*m2*m3^2*cos(q1 + q2 - q3) + 1962*L1^2*L2^2*L3*m2*m3^2*cos(q1 - q2 + q3) - 981*L1^2*L2^2*L3*m2^2*m3*cos(q1 + q2 - q3) + 981*L1^2*L2^2*L3*m2^2*m3*cos(q1 - q2 + q3) + 981*L1^2*L2^2*L3*m2^2*m3*cos(q2 - q1 + q3) + 981*L1^2*L2*L3^2*m2*m3^2*cos(q1 + q2 + 2*q3) - 400*L1*L2*L3^2*m3^2*tau1*cos(q2) + 400*L1*L2*L3^2*m3^2*tau2*cos(q2) + 800*L1^2*L2*L3*m3^2*tau2*cos(q3) - 1600*L1^2*L2*L3*m3^2*tau3*cos(q3) + 1600*I2_zz*L1*L3*m3*tau1*cos(q2 + q3) - 1600*I2_zz*L1*L3*m3*tau2*cos(q2 + q3) - 400*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) - 400*I3_zz*L1^2*L2^2*m2^2*q2_p^2*sin(2*q2) - 1600*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) + 800*I1_zz*L2^2*L3^2*m3^2*q1_p^2*sin(2*q3) - 1600*I3_zz*L1^2*L2^2*m3^2*q2_p^2*sin(2*q2) + 800*I1_zz*L2^2*L3^2*m3^2*q2_p^2*sin(2*q3) + 400*I1_zz*L2^2*L3^2*m3^2*q3_p^2*sin(2*q3) - 2943*L1^2*L2*L3^2*m2*m3^2*cos(q1 + q2) - 1962*L1^2*L2*L3^2*m2^2*m3*cos(q1 + q2) - 800*L1*L2^2*L3*m3^2*tau1*cos(q2 - q3) + 400*L1*L2*L3^2*m3^2*tau1*cos(q2 + 2*q3) + 800*L1*L2^2*L3*m3^2*tau2*cos(q2 - q3) - 400*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) - 800*L1^2*L2*L3*m3^2*tau2*cos(2*q2 + q3) + 1600*L1^2*L2*L3*m3^2*tau3*cos(2*q2 + q3) - 3924*I2_zz*L1^2*L3*m1*m3*cos(q2 - q1 + q3) - 3924*I1_zz*L2^2*L3*m2*m3*cos(q1 + q2 - q3) - 7848*I2_zz*L1^2*L3*m2*m3*cos(q2 - q1 + q3) + 1600*I2_zz*L1^3*L3*m3^2*q1_p^2*sin(q2 + q3) - 1600*I3_zz*L1*L2*m2*tau1*cos(q2) + 1600*I3_zz*L1*L2*m2*tau2*cos(q2) - 3200*I3_zz*L1*L2*m3*tau1*cos(q2) + 3200*I3_zz*L1*L2*m3*tau2*cos(q2) + 1600*I1_zz*L2*L3*m3*tau2*cos(q3) - 3200*I1_zz*L2*L3*m3*tau3*cos(q3) - 200*L1^3*L2^2*L3*m1*m3^2*q1_p^2*sin(q2 - q3) + 100*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2 + 2*q3) - 400*L1^3*L2^2*L3*m2*m3^2*q1_p^2*sin(q2 - q3) - 200*L1^3*L2^2*L3*m2^2*m3*q1_p^2*sin(q2 - q3) - 100*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 200*L1^2*L2^3*L3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 100*L1^2*L2^3*L3*m2^2*m3*q1_p^2*sin(2*q2 + q3) + 200*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) - 100*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(2*q2 + q3) - 200*L1^2*L2^3*L3*m2*m3^2*q2_p^2*sin(2*q2 + q3) - 100*L1^2*L2^3*L3*m2^2*m3*q2_p^2*sin(2*q2 + q3) - 100*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(2*q2 + q3) + 800*I2_zz*L1^2*L3^2*m3^2*q1_p*q2_p*sin(2*q2 + 2*q3) + 800*I2_zz*L1^2*L3^2*m3^2*q1_p*q3_p*sin(2*q2 + 2*q3) + 800*I2_zz*L1^2*L3^2*m3^2*q2_p*q3_p*sin(2*q2 + 2*q3) - 400*I3_zz*L1^3*L2*m1*m2*q1_p^2*sin(q2) - 800*I3_zz*L1^3*L2*m1*m3*q1_p^2*sin(q2) - 4800*I3_zz*L1^3*L2*m2*m3*q1_p^2*sin(q2) + 400*I1_zz*L2^3*L3*m2*m3*q1_p^2*sin(q3) + 400*I1_zz*L2^3*L3*m2*m3*q2_p^2*sin(q3) + 800*I1_zz*L2*L3^3*m3^2*q1_p*q2_p*sin(q3) + 3200*I1_zz*L2^3*L3*m3^2*q1_p*q2_p*sin(q3) + 800*I1_zz*L2*L3^3*m3^2*q1_p*q3_p*sin(q3) + 800*I1_zz*L2*L3^3*m3^2*q2_p*q3_p*sin(q3) + 800*I1_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) + 981*L1^2*L2*L3^2*m1*m2*m3*cos(q1 - q2) - 400*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 800*I2_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) + 800*I2_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) + 800*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(q3) + 1600*I1_zz*I2_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) - 800*I1_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 400*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 800*I2_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) + 800*I2_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(2*q2 + q3) - 1600*I1_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) - 3200*I1_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 1600*I1_zz*I2_zz*L2*L3*m3*q1_p^2*sin(q3) + 1600*I1_zz*I2_zz*L2*L3*m3*q2_p^2*sin(q3) + 1600*I1_zz*I3_zz*L2*L3*m3*q1_p^2*sin(q3) + 1600*I1_zz*I3_zz*L2*L3*m3*q2_p^2*sin(q3) + 1600*I1_zz*I3_zz*L2*L3*m3*q3_p^2*sin(q3) + 200*L1^2*L2^2*L3^2*m1*m3^2*q1_p^2*sin(2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) - 100*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) + 200*L1^2*L2^2*L3^2*m1*m3^2*q2_p^2*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2) - 100*L1^2*L2^2*L3^2*m2^2*m3*q2_p^2*sin(2*q2) + 100*L1^2*L2^2*L3^2*m1*m3^2*q3_p^2*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q3) + 200*L1^2*L2^2*L3^2*m2*m3^2*q3_p^2*sin(2*q3) + 981*L1^2*L2^2*L3*m1*m2*m3*cos(q1 - q2 + q3) + 200*L1^3*L2^2*L3*m1*m3^2*q1_p^2*sin(q2 + q3) - 200*L1^3*L2^2*L3*m2^2*m3*q1_p^2*sin(q2 + q3) - 400*L1*L2*L3^2*m2*m3*tau1*cos(q2) + 400*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 400*L1^2*L2*L3*m1*m3*tau2*cos(q3) - 800*L1^2*L2*L3*m1*m3*tau3*cos(q3) + 1200*L1^2*L2*L3*m2*m3*tau2*cos(q3) - 2400*L1^2*L2*L3*m2*m3*tau3*cos(q3) - 100*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) - 100*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2 + 2*q3) - 100*L1^2*L2^2*L3^2*m2*m3^2*q3_p^2*sin(2*q2 + 2*q3) - 1600*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) - 1600*I3_zz*L1^2*L2^2*m2*m3*q2_p^2*sin(2*q2) - 100*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2) + 100*L1^2*L2*L3^3*m1*m3^2*q1_p^2*sin(q3) + 400*L1^2*L2^3*L3*m1*m3^2*q1_p^2*sin(q3) - 600*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2) - 400*L1^3*L2*L3^2*m2^2*m3*q1_p^2*sin(q2) + 100*L1^2*L2*L3^3*m1*m3^2*q2_p^2*sin(q3) + 300*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(q3) + 400*L1^2*L2^3*L3*m1*m3^2*q2_p^2*sin(q3) + 600*L1^2*L2^3*L3*m2*m3^2*q1_p^2*sin(q3) + 100*L1^2*L2^3*L3*m2^2*m3*q1_p^2*sin(q3) + 100*L1^2*L2*L3^3*m1*m3^2*q3_p^2*sin(q3) + 300*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(q3) + 600*L1^2*L2^3*L3*m2*m3^2*q2_p^2*sin(q3) + 100*L1^2*L2^3*L3*m2^2*m3*q2_p^2*sin(q3) + 300*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(q3) - 800*I3_zz*L1^2*L2^2*m2^2*q1_p*q2_p*sin(2*q2) - 3200*I3_zz*L1^2*L2^2*m3^2*q1_p*q2_p*sin(2*q2) + 1600*I1_zz*L2^2*L3^2*m3^2*q1_p*q2_p*sin(2*q3) + 800*I1_zz*L2^2*L3^2*m3^2*q1_p*q3_p*sin(2*q3) + 800*I1_zz*L2^2*L3^2*m3^2*q2_p*q3_p*sin(2*q3) - 400*L1*L2^2*L3*m2*m3*tau1*cos(q2 - q3) + 400*L1*L2^2*L3*m2*m3*tau2*cos(q2 - q3) - 400*L1^2*L2*L3*m2*m3*tau2*cos(2*q2 + q3) + 800*L1^2*L2*L3*m2*m3*tau3*cos(2*q2 + q3) + 400*I2_zz*L1^3*L3*m1*m3*q1_p^2*sin(q2 + q3) + 1600*I2_zz*L1^3*L3*m2*m3*q1_p^2*sin(q2 + q3) + 200*L1^2*L2*L3^3*m1*m3^2*q1_p*q2_p*sin(q3) + 800*L1^2*L2^3*L3*m1*m3^2*q1_p*q2_p*sin(q3) + 200*L1^2*L2*L3^3*m1*m3^2*q1_p*q3_p*sin(q3) + 600*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(q3) + 1200*L1^2*L2^3*L3*m2*m3^2*q1_p*q2_p*sin(q3) + 200*L1^2*L2^3*L3*m2^2*m3*q1_p*q2_p*sin(q3) + 200*L1^2*L2*L3^3*m1*m3^2*q2_p*q3_p*sin(q3) + 600*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(q3) + 600*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(q3) - 100*L1^3*L2^2*L3*m1*m2*m3*q1_p^2*sin(q2 - q3) - 200*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 400*L1^2*L2^3*L3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 200*L1^2*L2^3*L3*m2^2*m3*q1_p*q2_p*sin(2*q2 + q3) - 200*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(2*q2 + q3) - 200*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 800*I1_zz*L2^3*L3*m2*m3*q1_p*q2_p*sin(q3) - 400*I1_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 400*I2_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) + 400*I2_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) + 1200*I2_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) + 400*I3_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) + 1200*I2_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) + 400*I3_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) + 1200*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) + 400*I3_zz*L1^2*L2*L3*m1*m3*q3_p^2*sin(q3) + 1200*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) + 1200*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(q3) + 1600*I2_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(q3) + 1600*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(q3) - 400*I1_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 400*I2_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) + 400*I2_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) - 400*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) - 400*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) - 400*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(2*q2 + q3) + 1600*I2_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 1600*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(2*q2 + q3) - 1600*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 3200*I1_zz*I2_zz*L2*L3*m3*q1_p*q2_p*sin(q3) + 3200*I1_zz*I3_zz*L2*L3*m3*q1_p*q2_p*sin(q3) + 3200*I1_zz*I3_zz*L2*L3*m3*q1_p*q3_p*sin(q3) + 3200*I1_zz*I3_zz*L2*L3*m3*q2_p*q3_p*sin(q3) + 400*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q2_p*sin(2*q3) - 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2) - 200*L1^2*L2^2*L3^2*m2^2*m3*q1_p*q2_p*sin(2*q2) + 200*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q3_p*sin(2*q3) + 800*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q3) + 200*L1^2*L2^2*L3^2*m1*m3^2*q2_p*q3_p*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q3_p*sin(2*q3) + 400*L1^2*L2^2*L3^2*m2*m3^2*q2_p*q3_p*sin(2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2 + 2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q3_p*sin(2*q2 + 2*q3) - 200*L1^2*L2^2*L3^2*m2*m3^2*q2_p*q3_p*sin(2*q2 + 2*q3) - 100*L1^3*L2*L3^2*m1*m2*m3*q1_p^2*sin(q2) + 100*L1^2*L2^3*L3*m1*m2*m3*q1_p^2*sin(q3) + 100*L1^2*L2^3*L3*m1*m2*m3*q2_p^2*sin(q3) - 3200*I3_zz*L1^2*L2^2*m2*m3*q1_p*q2_p*sin(2*q2) + 200*L1^2*L2^3*L3*m1*m2*m3*q1_p*q2_p*sin(q3) + 800*I2_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) + 2400*I2_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) + 800*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) + 800*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q3_p*sin(q3) + 2400*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) + 800*I3_zz*L1^2*L2*L3*m1*m3*q2_p*q3_p*sin(q3) + 2400*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(q3) + 2400*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(q3) + 800*I2_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(2*q2 + q3) - 800*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(2*q2 + q3))/(50*(64*I1_zz*I2_zz*I3_zz + 16*I2_zz*I3_zz*L1^2*m1 + 16*I1_zz*I3_zz*L2^2*m2 + 64*I2_zz*I3_zz*L1^2*m2 + 16*I1_zz*I2_zz*L3^2*m3 + 64*I1_zz*I3_zz*L2^2*m3 + 64*I2_zz*I3_zz*L1^2*m3 + 8*I3_zz*L1^2*L2^2*m2^2 + 8*I1_zz*L2^2*L3^2*m3^2 + 8*I2_zz*L1^2*L3^2*m3^2 + 32*I3_zz*L1^2*L2^2*m3^2 - 8*I2_zz*L1^2*L3^2*m3^2*cos(2*q2 + 2*q3) + 2*L1^2*L2^2*L3^2*m1*m3^2 + 6*L1^2*L2^2*L3^2*m2*m3^2 + 2*L1^2*L2^2*L3^2*m2^2*m3 + 4*I3_zz*L1^2*L2^2*m1*m2 + 4*I2_zz*L1^2*L3^2*m1*m3 + 16*I3_zz*L1^2*L2^2*m1*m3 + 4*I1_zz*L2^2*L3^2*m2*m3 + 16*I2_zz*L1^2*L3^2*m2*m3 + 48*I3_zz*L1^2*L2^2*m2*m3 - 8*I3_zz*L1^2*L2^2*m2^2*cos(2*q2) - 32*I3_zz*L1^2*L2^2*m3^2*cos(2*q2) - 8*I1_zz*L2^2*L3^2*m3^2*cos(2*q3) - 32*I3_zz*L1^2*L2^2*m2*m3*cos(2*q2) + L1^2*L2^2*L3^2*m1*m2*m3 - 2*L1^2*L2^2*L3^2*m1*m3^2*cos(2*q3) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2) - 2*L1^2*L2^2*L3^2*m2^2*m3*cos(2*q2) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q3) + 2*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2 + 2*q3)));

%below - with inertia, mass and length given in the consturction of the equations

q1_pp = (320*I2_zz*I3_zz*tau1 - 320*I2_zz*I3_zz*tau2 - 109872*I2_zz*I3_zz*L1*cos(q1) + 80*I3_zz*L2^2*m2*tau1 + 80*I2_zz*L3^2*m3*tau1 - 80*I3_zz*L2^2*m2*tau2 + 320*I3_zz*L2^2*m3*tau1 - 80*I2_zz*L3^2*m3*tau2 - 320*I3_zz*L2^2*m3*tau2 + 40*L2^2*L3^2*m3^2*tau1 - 40*L2^2*L3^2*m3^2*tau2 + 20*L2^2*L3^2*m2*m3*tau1 - 20*L2^2*L3^2*m2*m3*tau2 + 13734*I3_zz*L1*L2^2*m2*cos(q1 + 2*q2) + 27468*I3_zz*L1*L2^2*m3*cos(q1 + 2*q2) - 40*L2^2*L3^2*m3^2*tau1*cos(2*q3) + 40*L2^2*L3^2*m3^2*tau2*cos(2*q3) - (16677*L1*L2^2*L3^2*m3^2*cos(q1))/2 - (2943*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q2 + 2*q3))/2 + (2943*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q2))/2 + (6867*L1*L2^2*L3^2*m3^2*cos(q1 - 2*q3))/2 + 4905*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q3) - 13734*I3_zz*L1*L2^2*m2*cos(q1) - 23544*I2_zz*L1*L3^2*m3*cos(q1) - 82404*I3_zz*L1*L2^2*m3*cos(q1) + 3924*I2_zz*L1*L3^2*m3*cos(q1 + 2*q2 + 2*q3) + 40*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 40*I3_zz*L1*L2^3*m2^2*q1_p^2*sin(q2) + 40*I3_zz*L1*L2^3*m2^2*q2_p^2*sin(q2) + 320*I3_zz*L1*L2^3*m3^2*q1_p^2*sin(q2) + 320*I3_zz*L1*L2^3*m3^2*q2_p^2*sin(q2) - 80*L1*L2^2*L3*m3^2*tau3*cos(q2 + q3) - (6867*L1*L2^2*L3^2*m2*m3*cos(q1))/2 - 40*L1*L2*L3^2*m3^2*tau2*cos(q2) + 40*L1*L2*L3^2*m3^2*tau3*cos(q2) - 160*I2_zz*L1*L3*m3*tau3*cos(q2 + q3) + 40*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) + 160*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) + (4905*L1*L2^2*L3^2*m2*m3*cos(q1 + 2*q2))/2 - 981*L1*L2^2*L3^2*m2*m3*cos(q1 + 2*q3) + 40*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) + 80*L1*L2^2*L3*m3^2*tau3*cos(q2 - q3) - 40*L1*L2*L3^2*m3^2*tau3*cos(q2 + 2*q3) + 40*I2_zz*L1*L3^3*m3^2*q1_p^2*sin(q2 + q3) + 40*I2_zz*L1*L3^3*m3^2*q2_p^2*sin(q2 + q3) + 40*I2_zz*L1*L3^3*m3^2*q3_p^2*sin(q2 + q3) - 160*I3_zz*L1*L2*m2*tau2*cos(q2) + 160*I3_zz*L1*L2*m2*tau3*cos(q2) - 320*I3_zz*L1*L2*m3*tau2*cos(q2) + 320*I3_zz*L1*L2*m3*tau3*cos(q2) + 80*I2_zz*L1*L3^3*m3^2*q1_p*q2_p*sin(q2 + q3) + 80*I2_zz*L1*L3^3*m3^2*q1_p*q3_p*sin(q2 + q3) + 80*I2_zz*L1*L3^3*m3^2*q2_p*q3_p*sin(q2 + q3) + 10*L1*L2^2*L3^3*m2*m3^2*q1_p^2*sin(q2 - q3) + 10*L1*L2^2*L3^3*m2*m3^2*q2_p^2*sin(q2 - q3) - 10*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 10*L1*L2^2*L3^3*m2*m3^2*q3_p^2*sin(q2 - q3) - 10*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2 + 2*q3) + 240*I3_zz*L1*L2^3*m2*m3*q1_p^2*sin(q2) + 240*I3_zz*L1*L2^3*m2*m3*q2_p^2*sin(q2) + 80*I3_zz*L1*L2^3*m2^2*q1_p*q2_p*sin(q2) + 640*I3_zz*L1*L2^3*m3^2*q1_p*q2_p*sin(q2) + 80*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) + 80*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 + q3) + 80*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 + q3) + 40*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 40*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2) + 160*I2_zz*I3_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) + 160*I2_zz*I3_zz*L1*L3*m3*q2_p^2*sin(q2 + q3) + 160*I2_zz*I3_zz*L1*L3*m3*q3_p^2*sin(q2 + q3) + 40*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 80*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 40*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2 + 2*q3) + 80*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 - q3) + 80*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 - q3) + 160*I2_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 160*I2_zz*I3_zz*L1*L2*m2*q2_p^2*sin(q2) + 320*I2_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 320*I2_zz*I3_zz*L1*L2*m3*q2_p^2*sin(q2) + 20*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) + 10*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) - 40*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 40*L1*L2*L3^2*m2*m3*tau3*cos(q2) - 10*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 160*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) + 30*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2) + 10*L1*L2^3*L3^2*m2^2*m3*q1_p^2*sin(q2) + 30*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2) + 10*L1*L2^3*L3^2*m2^2*m3*q2_p^2*sin(q2) + 40*L1*L2^2*L3*m2*m3*tau3*cos(q2 - q3) + 60*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2) + 20*L1*L2^3*L3^2*m2^2*m3*q1_p*q2_p*sin(q2) + 20*L1*L2^2*L3^3*m2*m3^2*q1_p*q2_p*sin(q2 - q3) + 20*L1*L2^2*L3^3*m2*m3^2*q1_p*q3_p*sin(q2 - q3) - 20*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 20*L1*L2^2*L3^3*m2*m3^2*q2_p*q3_p*sin(q2 - q3) + 480*I3_zz*L1*L2^3*m2*m3*q1_p*q2_p*sin(q2) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 + q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 + q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 + q3) + 40*I2_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 40*I2_zz*L1*L2*L3^2*m2*m3*q2_p^2*sin(q2) + 80*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2) + 320*I2_zz*I3_zz*L1*L3*m3*q1_p*q2_p*sin(q2 + q3) + 320*I2_zz*I3_zz*L1*L3*m3*q1_p*q3_p*sin(q2 + q3) + 320*I2_zz*I3_zz*L1*L3*m3*q2_p*q3_p*sin(q2 + q3) + 40*I3_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 40*I3_zz*L1*L2^2*L3*m2*m3*q2_p^2*sin(q2 - q3) + 40*I3_zz*L1*L2^2*L3*m2*m3*q3_p^2*sin(q2 - q3) + 80*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 - q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 - q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 - q3) + 320*I2_zz*I3_zz*L1*L2*m2*q1_p*q2_p*sin(q2) + 640*I2_zz*I3_zz*L1*L2*m3*q1_p*q2_p*sin(q2) + 80*I2_zz*L1*L2*L3^2*m2*m3*q1_p*q2_p*sin(q2) + 80*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q2_p*sin(q2 - q3) + 80*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q3_p*sin(q2 - q3) + 80*I3_zz*L1*L2^2*L3*m2*m3*q2_p*q3_p*sin(q2 - q3))/(5*(64*I1_zz*I2_zz*I3_zz + 16*I2_zz*I3_zz*L1^2*m1 + 16*I1_zz*I3_zz*L2^2*m2 + 64*I2_zz*I3_zz*L1^2*m2 + 16*I1_zz*I2_zz*L3^2*m3 + 64*I1_zz*I3_zz*L2^2*m3 + 64*I2_zz*I3_zz*L1^2*m3 + 8*I3_zz*L1^2*L2^2*m2^2 + 8*I1_zz*L2^2*L3^2*m3^2 + 8*I2_zz*L1^2*L3^2*m3^2 + 32*I3_zz*L1^2*L2^2*m3^2 - 8*I2_zz*L1^2*L3^2*m3^2*cos(2*q2 + 2*q3) + 2*L1^2*L2^2*L3^2*m1*m3^2 + 6*L1^2*L2^2*L3^2*m2*m3^2 + 2*L1^2*L2^2*L3^2*m2^2*m3 + 4*I3_zz*L1^2*L2^2*m1*m2 + 4*I2_zz*L1^2*L3^2*m1*m3 + 16*I3_zz*L1^2*L2^2*m1*m3 + 4*I1_zz*L2^2*L3^2*m2*m3 + 16*I2_zz*L1^2*L3^2*m2*m3 + 48*I3_zz*L1^2*L2^2*m2*m3 - 8*I3_zz*L1^2*L2^2*m2^2*cos(2*q2) - 32*I3_zz*L1^2*L2^2*m3^2*cos(2*q2) - 8*I1_zz*L2^2*L3^2*m3^2*cos(2*q3) - 32*I3_zz*L1^2*L2^2*m2*m3*cos(2*q2) + L1^2*L2^2*L3^2*m1*m2*m3 - 2*L1^2*L2^2*L3^2*m1*m3^2*cos(2*q3) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2) - 2*L1^2*L2^2*L3^2*m2^2*m3*cos(2*q2) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q3) + 2*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2 + 2*q3)));
q2_pp = -(640*I2_zz*I3_zz*tau1 - 640*I1_zz*I3_zz*tau2 + 640*I1_zz*I3_zz*tau3 - 640*I2_zz*I3_zz*tau2 - 219744*I2_zz*I3_zz*L1*cos(q1) - 160*I3_zz*L1^2*m1*tau2 + 160*I3_zz*L1^2*m1*tau3 - 640*I3_zz*L1^2*m2*tau2 + 160*I3_zz*L2^2*m2*tau1 - 160*I1_zz*L3^2*m3*tau2 + 160*I2_zz*L3^2*m3*tau1 + 640*I3_zz*L1^2*m2*tau3 - 640*I3_zz*L1^2*m3*tau2 - 160*I3_zz*L2^2*m2*tau2 + 640*I3_zz*L2^2*m3*tau1 + 160*I1_zz*L3^2*m3*tau3 - 160*I2_zz*L3^2*m3*tau2 + 640*I3_zz*L1^2*m3*tau3 - 640*I3_zz*L2^2*m3*tau2 + 109872*I1_zz*I3_zz*L2*cos(q1 + q2) - 80*L1^2*L3^2*m3^2*tau2 + 80*L2^2*L3^2*m3^2*tau1 + 80*L1^2*L3^2*m3^2*tau3 - 80*L2^2*L3^2*m3^2*tau2 - 40*L1^2*L3^2*m1*m3*tau2 + 40*L1^2*L3^2*m1*m3*tau3 - 160*L1^2*L3^2*m2*m3*tau2 + 40*L2^2*L3^2*m2*m3*tau1 + 160*L1^2*L3^2*m2*m3*tau3 - 40*L2^2*L3^2*m2*m3*tau2 - 54936*I3_zz*L1^2*L2*m2*cos(q1 - q2) + 27468*I3_zz*L1*L2^2*m2*cos(q1 + 2*q2) - 109872*I3_zz*L1^2*L2*m3*cos(q1 - q2) + 54936*I3_zz*L1*L2^2*m3*cos(q1 + 2*q2) - 80*L2^2*L3^2*m3^2*tau1*cos(2*q3) + 80*L2^2*L3^2*m3^2*tau2*cos(2*q3) + 9810*L1^2*L2*L3^2*m3^2*cos(q1 + q2 + 2*q3) + 80*L1^2*L3^2*m3^2*tau2*cos(2*q2 + 2*q3) - 80*L1^2*L3^2*m3^2*tau3*cos(2*q2 + 2*q3) - 3924*L1^2*L2*L3^2*m3^2*cos(q1 + q2) - 7848*I1_zz*L2*L3^2*m3*cos(q1 + q2 + 2*q3) - 16677*L1*L2^2*L3^2*m3^2*cos(q1) + 6867*L1^2*L2*L3^2*m3^2*cos(q2 - q1 + 2*q3) - 2943*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q2 + 2*q3) - 2943*L1^2*L2*L3^2*m3^2*cos(q1 + 3*q2 + 2*q3) + 27468*I3_zz*L1^2*L2*m1*cos(q1 + q2) + 54936*I3_zz*L1^2*L2*m2*cos(q1 + q2) + 19620*I1_zz*L2*L3^2*m3*cos(q1 + q2) - 9810*L1^2*L2*L3^2*m3^2*cos(q1 - q2) + 2943*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q2) + 6867*L1*L2^2*L3^2*m3^2*cos(q1 - 2*q3) + 9810*L1*L2^2*L3^2*m3^2*cos(q1 + 2*q3) - 27468*I3_zz*L1*L2^2*m2*cos(q1) - 47088*I2_zz*L1*L3^2*m3*cos(q1) - 164808*I3_zz*L1*L2^2*m3*cos(q1) + 7848*I2_zz*L1*L3^2*m3*cos(q1 + 2*q2 + 2*q3) + 80*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 80*I3_zz*L1*L2^3*m2^2*q1_p^2*sin(q2) + 320*I3_zz*L1^3*L2*m2^2*q1_p^2*sin(q2) + 80*I3_zz*L1*L2^3*m2^2*q2_p^2*sin(q2) + 640*I3_zz*L1*L2^3*m3^2*q1_p^2*sin(q2) + 640*I3_zz*L1^3*L2*m3^2*q1_p^2*sin(q2) - 80*I1_zz*L2*L3^3*m3^2*q1_p^2*sin(q3) + 640*I3_zz*L1*L2^3*m3^2*q2_p^2*sin(q2) - 80*I1_zz*L2*L3^3*m3^2*q2_p^2*sin(q3) - 80*I1_zz*L2*L3^3*m3^2*q3_p^2*sin(q3) - 1962*L1^2*L2*L3^2*m1*m3*cos(q1 + q2 + 2*q3) - 5886*L1^2*L2*L3^2*m2*m3*cos(q1 + q2 + 2*q3) + 4905*L1^2*L2*L3^2*m1*m3*cos(q1 + q2) + 7848*L1^2*L2*L3^2*m2*m3*cos(q1 + q2) - 160*L1*L2^2*L3*m3^2*tau3*cos(q2 + q3) - 6867*L1*L2^2*L3^2*m2*m3*cos(q1) + 1962*L1^2*L2*L3^2*m2*m3*cos(q1 + 3*q2 + 2*q3) + 80*L1*L2*L3^2*m3^2*tau1*cos(q2) - 160*L1*L2*L3^2*m3^2*tau2*cos(q2) + 80*L1*L2*L3^2*m3^2*tau3*cos(q2) + 160*L1^2*L2*L3*m3^2*tau3*cos(q3) - 320*I2_zz*L1*L3*m3*tau3*cos(q2 + q3) + 160*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) + 80*I3_zz*L1^2*L2^2*m2^2*q2_p^2*sin(2*q2) + 640*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) - 80*I1_zz*L2^2*L3^2*m3^2*q1_p^2*sin(2*q3) + 320*I3_zz*L1^2*L2^2*m3^2*q2_p^2*sin(2*q2) - 80*I1_zz*L2^2*L3^2*m3^2*q2_p^2*sin(2*q3) - 11772*L1^2*L2*L3^2*m2*m3*cos(q1 - q2) + 4905*L1*L2^2*L3^2*m2*m3*cos(q1 + 2*q2) - 1962*L1*L2^2*L3^2*m2*m3*cos(q1 + 2*q3) - 80*L1*L2*L3^2*m3^2*tau1*cos(q2 + 2*q3) + 160*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) + 160*L1*L2^2*L3*m3^2*tau3*cos(q2 - q3) - 80*L1*L2*L3^2*m3^2*tau3*cos(q2 + 2*q3) - 160*L1^2*L2*L3*m3^2*tau3*cos(2*q2 + q3) + 80*I2_zz*L1*L3^3*m3^2*q1_p^2*sin(q2 + q3) + 80*I2_zz*L1*L3^3*m3^2*q2_p^2*sin(q2 + q3) + 80*I2_zz*L1*L3^3*m3^2*q3_p^2*sin(q2 + q3) + 320*I3_zz*L1*L2*m2*tau1*cos(q2) - 640*I3_zz*L1*L2*m2*tau2*cos(q2) + 640*I3_zz*L1*L2*m3*tau1*cos(q2) + 320*I3_zz*L1*L2*m2*tau3*cos(q2) - 1280*I3_zz*L1*L2*m3*tau2*cos(q2) + 640*I3_zz*L1*L2*m3*tau3*cos(q2) + 320*I1_zz*L2*L3*m3*tau3*cos(q3) + 160*I2_zz*L1*L3^3*m3^2*q1_p*q2_p*sin(q2 + q3) + 160*I2_zz*L1*L3^3*m3^2*q1_p*q3_p*sin(q2 + q3) + 160*I2_zz*L1*L3^3*m3^2*q2_p*q3_p*sin(q2 + q3) + 20*L1*L2^2*L3^3*m2*m3^2*q1_p^2*sin(q2 - q3) - 20*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2 + 2*q3) + 20*L1*L2^2*L3^3*m2*m3^2*q2_p^2*sin(q2 - q3) - 20*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 20*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 40*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) + 20*L1*L2^2*L3^3*m2*m3^2*q3_p^2*sin(q2 - q3) - 20*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2 + 2*q3) + 20*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(2*q2 + q3) + 20*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(2*q2 + q3) + 80*I3_zz*L1^3*L2*m1*m2*q1_p^2*sin(q2) + 160*I3_zz*L1^3*L2*m1*m3*q1_p^2*sin(q2) + 480*I3_zz*L1*L2^3*m2*m3*q1_p^2*sin(q2) + 960*I3_zz*L1^3*L2*m2*m3*q1_p^2*sin(q2) + 480*I3_zz*L1*L2^3*m2*m3*q2_p^2*sin(q2) + 160*I3_zz*L1*L2^3*m2^2*q1_p*q2_p*sin(q2) + 1280*I3_zz*L1*L2^3*m3^2*q1_p*q2_p*sin(q2) - 160*I1_zz*L2*L3^3*m3^2*q1_p*q2_p*sin(q3) - 160*I1_zz*L2*L3^3*m3^2*q1_p*q3_p*sin(q3) - 160*I1_zz*L2*L3^3*m3^2*q2_p*q3_p*sin(q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 + q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 + q3) + 80*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 80*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 80*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2) - 160*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) - 160*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) - 160*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(q3) + 320*I2_zz*I3_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) + 320*I2_zz*I3_zz*L1*L3*m3*q2_p^2*sin(q2 + q3) + 320*I2_zz*I3_zz*L1*L3*m3*q3_p^2*sin(q2 + q3) - 80*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 80*I2_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 80*I2_zz*L1*L2*L3^2*m3^2*q2_p^2*sin(q2 + 2*q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q2_p^2*sin(q2 - q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) + 160*I3_zz*L1*L2^2*L3*m3^2*q3_p^2*sin(q2 - q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(2*q2 + q3) + 320*I1_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 640*I1_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 320*I2_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) + 320*I2_zz*I3_zz*L1*L2*m2*q2_p^2*sin(q2) + 640*I2_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 640*I2_zz*I3_zz*L1*L2*m3*q2_p^2*sin(q2) - 320*I1_zz*I3_zz*L2*L3*m3*q1_p^2*sin(q3) - 320*I1_zz*I3_zz*L2*L3*m3*q2_p^2*sin(q3) - 320*I1_zz*I3_zz*L2*L3*m3*q3_p^2*sin(q3) - 20*L1^2*L2^2*L3^2*m1*m3^2*q1_p^2*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) + 40*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) - 20*L1^2*L2^2*L3^2*m1*m3^2*q2_p^2*sin(2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q3) + 40*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2) + 20*L1^2*L2^2*L3^2*m2^2*m3*q2_p^2*sin(2*q2) - 40*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q3) + 80*L1*L2*L3^2*m2*m3*tau1*cos(q2) - 160*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 80*L1*L2*L3^2*m2*m3*tau3*cos(q2) + 80*L1^2*L2*L3*m1*m3*tau3*cos(q3) + 240*L1^2*L2*L3*m2*m3*tau3*cos(q3) - 20*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 640*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) + 320*I3_zz*L1^2*L2^2*m2*m3*q2_p^2*sin(2*q2) + 20*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2) + 60*L1*L2^3*L3^2*m2*m3^2*q1_p^2*sin(q2) + 20*L1*L2^3*L3^2*m2^2*m3*q1_p^2*sin(q2) - 20*L1^2*L2*L3^3*m1*m3^2*q1_p^2*sin(q3) + 120*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2) + 80*L1^3*L2*L3^2*m2^2*m3*q1_p^2*sin(q2) + 60*L1*L2^3*L3^2*m2*m3^2*q2_p^2*sin(q2) + 20*L1*L2^3*L3^2*m2^2*m3*q2_p^2*sin(q2) - 20*L1^2*L2*L3^3*m1*m3^2*q2_p^2*sin(q3) - 60*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(q3) - 20*L1^2*L2*L3^3*m1*m3^2*q3_p^2*sin(q3) - 60*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(q3) - 60*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(q3) + 160*I3_zz*L1^2*L2^2*m2^2*q1_p*q2_p*sin(2*q2) + 640*I3_zz*L1^2*L2^2*m3^2*q1_p*q2_p*sin(2*q2) - 160*I1_zz*L2^2*L3^2*m3^2*q1_p*q2_p*sin(2*q3) + 80*L1*L2^2*L3*m2*m3*tau3*cos(q2 - q3) - 80*L1^2*L2*L3*m2*m3*tau3*cos(2*q2 + q3) + 120*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2) + 40*L1*L2^3*L3^2*m2^2*m3*q1_p*q2_p*sin(q2) - 40*L1^2*L2*L3^3*m1*m3^2*q1_p*q2_p*sin(q3) - 40*L1^2*L2*L3^3*m1*m3^2*q1_p*q3_p*sin(q3) - 120*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(q3) - 40*L1^2*L2*L3^3*m1*m3^2*q2_p*q3_p*sin(q3) - 120*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(q3) - 120*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(q3) + 40*L1*L2^2*L3^3*m2*m3^2*q1_p*q2_p*sin(q2 - q3) + 40*L1*L2^2*L3^3*m2*m3^2*q1_p*q3_p*sin(q2 - q3) - 40*L1*L2^3*L3^2*m2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 40*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) + 40*L1*L2^2*L3^3*m2*m3^2*q2_p*q3_p*sin(q2 - q3) + 40*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(2*q2 + q3) + 40*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 960*I3_zz*L1*L2^3*m2*m3*q1_p*q2_p*sin(q2) + 320*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 + q3) + 320*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 + q3) + 320*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 + q3) + 80*I1_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 80*I2_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 80*I2_zz*L1*L2*L3^2*m2*m3*q2_p^2*sin(q2) - 80*I3_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) - 80*I3_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) - 240*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) - 80*I3_zz*L1^2*L2*L3*m1*m3*q3_p^2*sin(q3) - 240*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) - 240*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(q3) + 160*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2) - 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) - 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(q3) - 320*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(q3) + 640*I2_zz*I3_zz*L1*L3*m3*q1_p*q2_p*sin(q2 + q3) + 640*I2_zz*I3_zz*L1*L3*m3*q1_p*q3_p*sin(q2 + q3) + 640*I2_zz*I3_zz*L1*L3*m3*q2_p*q3_p*sin(q2 + q3) + 80*I3_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 80*I3_zz*L1*L2^2*L3*m2*m3*q2_p^2*sin(q2 - q3) + 80*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) + 80*I3_zz*L1*L2^2*L3*m2*m3*q3_p^2*sin(q2 - q3) + 80*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) + 80*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(2*q2 + q3) + 160*I2_zz*L1*L2*L3^2*m3^2*q1_p*q2_p*sin(q2 + 2*q3) + 320*I3_zz*L1*L2^2*L3*m3^2*q1_p*q2_p*sin(q2 - q3) + 320*I3_zz*L1*L2^2*L3*m3^2*q1_p*q3_p*sin(q2 - q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) + 320*I3_zz*L1*L2^2*L3*m3^2*q2_p*q3_p*sin(q2 - q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(2*q2 + q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 640*I2_zz*I3_zz*L1*L2*m2*q1_p*q2_p*sin(q2) + 1280*I2_zz*I3_zz*L1*L2*m3*q1_p*q2_p*sin(q2) - 640*I1_zz*I3_zz*L2*L3*m3*q1_p*q2_p*sin(q3) - 640*I1_zz*I3_zz*L2*L3*m3*q1_p*q3_p*sin(q3) - 640*I1_zz*I3_zz*L2*L3*m3*q2_p*q3_p*sin(q3) - 40*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q2_p*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2) + 40*L1^2*L2^2*L3^2*m2^2*m3*q1_p*q2_p*sin(2*q2) - 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q3) + 20*L1^3*L2*L3^2*m1*m2*m3*q1_p^2*sin(q2) + 640*I3_zz*L1^2*L2^2*m2*m3*q1_p*q2_p*sin(2*q2) + 160*I2_zz*L1*L2*L3^2*m2*m3*q1_p*q2_p*sin(q2) - 160*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) - 160*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q3_p*sin(q3) - 480*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) - 160*I3_zz*L1^2*L2*L3*m1*m3*q2_p*q3_p*sin(q3) - 480*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(q3) - 480*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(q3) + 160*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q2_p*sin(q2 - q3) + 160*I3_zz*L1*L2^2*L3*m2*m3*q1_p*q3_p*sin(q2 - q3) + 160*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) + 160*I3_zz*L1*L2^2*L3*m2*m3*q2_p*q3_p*sin(q2 - q3) + 160*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(2*q2 + q3) + 160*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(2*q2 + q3))/(10*(64*I1_zz*I2_zz*I3_zz + 16*I2_zz*I3_zz*L1^2*m1 + 16*I1_zz*I3_zz*L2^2*m2 + 64*I2_zz*I3_zz*L1^2*m2 + 16*I1_zz*I2_zz*L3^2*m3 + 64*I1_zz*I3_zz*L2^2*m3 + 64*I2_zz*I3_zz*L1^2*m3 + 8*I3_zz*L1^2*L2^2*m2^2 + 8*I1_zz*L2^2*L3^2*m3^2 + 8*I2_zz*L1^2*L3^2*m3^2 + 32*I3_zz*L1^2*L2^2*m3^2 - 8*I2_zz*L1^2*L3^2*m3^2*cos(2*q2 + 2*q3) + 2*L1^2*L2^2*L3^2*m1*m3^2 + 6*L1^2*L2^2*L3^2*m2*m3^2 + 2*L1^2*L2^2*L3^2*m2^2*m3 + 4*I3_zz*L1^2*L2^2*m1*m2 + 4*I2_zz*L1^2*L3^2*m1*m3 + 16*I3_zz*L1^2*L2^2*m1*m3 + 4*I1_zz*L2^2*L3^2*m2*m3 + 16*I2_zz*L1^2*L3^2*m2*m3 + 48*I3_zz*L1^2*L2^2*m2*m3 - 8*I3_zz*L1^2*L2^2*m2^2*cos(2*q2) - 32*I3_zz*L1^2*L2^2*m3^2*cos(2*q2) - 8*I1_zz*L2^2*L3^2*m3^2*cos(2*q3) - 32*I3_zz*L1^2*L2^2*m2*m3*cos(2*q2) + L1^2*L2^2*L3^2*m1*m2*m3 - 2*L1^2*L2^2*L3^2*m1*m3^2*cos(2*q3) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2) - 2*L1^2*L2^2*L3^2*m2^2*m3*cos(2*q2) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q3) + 2*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2 + 2*q3)));
q3_pp = -(640*I1_zz*I3_zz*tau2 - 640*I1_zz*I2_zz*tau3 - 640*I1_zz*I3_zz*tau3 - 160*I2_zz*L1^2*m1*tau3 + 160*I3_zz*L1^2*m1*tau2 - 160*I1_zz*L2^2*m2*tau3 - 640*I2_zz*L1^2*m2*tau3 - 160*I3_zz*L1^2*m1*tau3 + 640*I3_zz*L1^2*m2*tau2 - 640*I1_zz*L2^2*m3*tau3 + 160*I1_zz*L3^2*m3*tau2 - 640*I2_zz*L1^2*m3*tau3 - 640*I3_zz*L1^2*m2*tau3 + 640*I3_zz*L1^2*m3*tau2 - 160*I1_zz*L3^2*m3*tau3 - 640*I3_zz*L1^2*m3*tau3 + 31392*I1_zz*I2_zz*L3*cos(q1 + q2 + q3) - 109872*I1_zz*I3_zz*L2*cos(q1 + q2) - 80*L1^2*L2^2*m2^2*tau3 - 320*L1^2*L2^2*m3^2*tau3 + 80*L1^2*L3^2*m3^2*tau2 - 80*L1^2*L3^2*m3^2*tau3 - 40*L1^2*L2^2*m1*m2*tau3 - 160*L1^2*L2^2*m1*m3*tau3 + 40*L1^2*L3^2*m1*m3*tau2 - 480*L1^2*L2^2*m2*m3*tau3 - 40*L1^2*L3^2*m1*m3*tau3 + 160*L1^2*L3^2*m2*m3*tau2 - 160*L1^2*L3^2*m2*m3*tau3 + 54936*I3_zz*L1^2*L2*m2*cos(q1 - q2) + 109872*I3_zz*L1^2*L2*m3*cos(q1 - q2) + 7848*I2_zz*L1^2*L3*m1*cos(q1 + q2 + q3) + 7848*I1_zz*L2^2*L3*m2*cos(q1 + q2 + q3) + 31392*I2_zz*L1^2*L3*m2*cos(q1 + q2 + q3) + 3924*I1_zz*L2^2*L3*m3*cos(q1 + q2 + q3) - 23544*I2_zz*L1^2*L3*m3*cos(q1 + q2 + q3) + 80*L1^2*L2^2*m2^2*tau3*cos(2*q2) + 320*L1^2*L2^2*m3^2*tau3*cos(2*q2) - 1962*L1^2*L2^2*L3*m2^2*cos(q1 - q2 + q3) + 13734*L1^2*L2^2*L3*m3^2*cos(q1 + q2 - q3) + 19620*L1^2*L2^2*L3*m3^2*cos(q1 - q2 + q3) - 13734*L1^2*L2^2*L3*m3^2*cos(q2 - q1 + q3) - 9810*L1^2*L2*L3^2*m3^2*cos(q1 + q2 + 2*q3) - 1962*L1^2*L2^2*L3*m2^2*cos(q1 + 3*q2 + q3) + 5886*L1^2*L2^2*L3*m3^2*cos(q1 + 3*q2 + q3) - 80*L1^2*L3^2*m3^2*tau2*cos(2*q2 + 2*q3) + 80*L1^2*L3^2*m3^2*tau3*cos(2*q2 + 2*q3) + 3924*L1^2*L2*L3^2*m3^2*cos(q1 + q2) - 27468*I1_zz*L2^2*L3*m3*cos(q1 + q2 - q3) - 54936*I2_zz*L1^2*L3*m3*cos(q2 - q1 + q3) + 7848*I1_zz*L2*L3^2*m3*cos(q1 + q2 + 2*q3) - 6867*L1^2*L2*L3^2*m3^2*cos(q2 - q1 + 2*q3) + 2943*L1^2*L2*L3^2*m3^2*cos(q1 + 3*q2 + 2*q3) - 27468*I3_zz*L1^2*L2*m1*cos(q1 + q2) - 54936*I3_zz*L1^2*L2*m2*cos(q1 + q2) - 19620*I1_zz*L2*L3^2*m3*cos(q1 + q2) + 9810*L1^2*L2*L3^2*m3^2*cos(q1 - q2) + 3924*L1^2*L2^2*L3*m2^2*cos(q1 + q2 + q3) - 25506*L1^2*L2^2*L3*m3^2*cos(q1 + q2 + q3) + 80*I2_zz*L1^2*L3^2*m3^2*q1_p^2*sin(2*q2 + 2*q3) + 80*I2_zz*L1^2*L3^2*m3^2*q2_p^2*sin(2*q2 + 2*q3) + 80*I2_zz*L1^2*L3^2*m3^2*q3_p^2*sin(2*q2 + 2*q3) - 320*I3_zz*L1^3*L2*m2^2*q1_p^2*sin(q2) - 640*I3_zz*L1^3*L2*m3^2*q1_p^2*sin(q2) + 80*I1_zz*L2*L3^3*m3^2*q1_p^2*sin(q3) + 320*I1_zz*L2^3*L3*m3^2*q1_p^2*sin(q3) + 80*I1_zz*L2*L3^3*m3^2*q2_p^2*sin(q3) + 320*I1_zz*L2^3*L3*m3^2*q2_p^2*sin(q3) + 80*I1_zz*L2*L3^3*m3^2*q3_p^2*sin(q3) + 320*L1^2*L2^2*m2*m3*tau3*cos(2*q2) - 6867*L1^2*L2^2*L3*m1*m3*cos(q1 + q2 - q3) + 1962*L1^2*L2*L3^2*m1*m3*cos(q1 + q2 + 2*q3) - 6867*L1^2*L2^2*L3*m2*m3*cos(q1 + q2 - q3) + 5886*L1^2*L2^2*L3*m2*m3*cos(q1 - q2 + q3) + 6867*L1^2*L2^2*L3*m2*m3*cos(q2 - q1 + q3) + 5886*L1^2*L2*L3^2*m2*m3*cos(q1 + q2 + 2*q3) - 981*L1^2*L2^2*L3*m2*m3*cos(q1 + 3*q2 + q3) - 4905*L1^2*L2*L3^2*m1*m3*cos(q1 + q2) - 7848*L1^2*L2*L3^2*m2*m3*cos(q1 + q2) + 160*L1*L2^2*L3*m3^2*tau1*cos(q2 + q3) - 160*L1*L2^2*L3*m3^2*tau2*cos(q2 + q3) - 1962*L1^2*L2*L3^2*m2*m3*cos(q1 + 3*q2 + 2*q3) - 80*L1*L2*L3^2*m3^2*tau1*cos(q2) + 80*L1*L2*L3^2*m3^2*tau2*cos(q2) + 160*L1^2*L2*L3*m3^2*tau2*cos(q3) - 320*L1^2*L2*L3*m3^2*tau3*cos(q3) + 320*I2_zz*L1*L3*m3*tau1*cos(q2 + q3) - 320*I2_zz*L1*L3*m3*tau2*cos(q2 + q3) - 80*I3_zz*L1^2*L2^2*m2^2*q1_p^2*sin(2*q2) - 80*I3_zz*L1^2*L2^2*m2^2*q2_p^2*sin(2*q2) - 320*I3_zz*L1^2*L2^2*m3^2*q1_p^2*sin(2*q2) + 160*I1_zz*L2^2*L3^2*m3^2*q1_p^2*sin(2*q3) - 320*I3_zz*L1^2*L2^2*m3^2*q2_p^2*sin(2*q2) + 160*I1_zz*L2^2*L3^2*m3^2*q2_p^2*sin(2*q3) + 80*I1_zz*L2^2*L3^2*m3^2*q3_p^2*sin(2*q3) + 11772*L1^2*L2*L3^2*m2*m3*cos(q1 - q2) - 160*L1*L2^2*L3*m3^2*tau1*cos(q2 - q3) + 80*L1*L2*L3^2*m3^2*tau1*cos(q2 + 2*q3) + 160*L1*L2^2*L3*m3^2*tau2*cos(q2 - q3) - 80*L1*L2*L3^2*m3^2*tau2*cos(q2 + 2*q3) - 160*L1^2*L2*L3*m3^2*tau2*cos(2*q2 + q3) + 320*L1^2*L2*L3*m3^2*tau3*cos(2*q2 + q3) + 320*I2_zz*L1^3*L3*m3^2*q1_p^2*sin(q2 + q3) + 1962*L1^2*L2^2*L3*m1*m2*cos(q1 + q2 + q3) + 981*L1^2*L2^2*L3*m1*m3*cos(q1 + q2 + q3) + 2943*L1^2*L2^2*L3*m2*m3*cos(q1 + q2 + q3) - 320*I3_zz*L1*L2*m2*tau1*cos(q2) + 320*I3_zz*L1*L2*m2*tau2*cos(q2) - 640*I3_zz*L1*L2*m3*tau1*cos(q2) + 640*I3_zz*L1*L2*m3*tau2*cos(q2) + 320*I1_zz*L2*L3*m3*tau2*cos(q3) - 640*I1_zz*L2*L3*m3*tau3*cos(q3) - 40*L1^3*L2^2*L3*m1*m3^2*q1_p^2*sin(q2 - q3) + 20*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2 + 2*q3) - 80*L1^3*L2^2*L3*m2*m3^2*q1_p^2*sin(q2 - q3) - 40*L1^3*L2^2*L3*m2^2*m3*q1_p^2*sin(q2 - q3) - 20*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 40*L1^2*L2^3*L3*m2*m3^2*q1_p^2*sin(2*q2 + q3) - 20*L1^2*L2^3*L3*m2^2*m3*q1_p^2*sin(2*q2 + q3) + 40*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2 + 2*q3) - 20*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(2*q2 + q3) - 40*L1^2*L2^3*L3*m2*m3^2*q2_p^2*sin(2*q2 + q3) - 20*L1^2*L2^3*L3*m2^2*m3*q2_p^2*sin(2*q2 + q3) - 20*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(2*q2 + q3) + 160*I2_zz*L1^2*L3^2*m3^2*q1_p*q2_p*sin(2*q2 + 2*q3) + 160*I2_zz*L1^2*L3^2*m3^2*q1_p*q3_p*sin(2*q2 + 2*q3) + 160*I2_zz*L1^2*L3^2*m3^2*q2_p*q3_p*sin(2*q2 + 2*q3) - 80*I3_zz*L1^3*L2*m1*m2*q1_p^2*sin(q2) - 160*I3_zz*L1^3*L2*m1*m3*q1_p^2*sin(q2) - 960*I3_zz*L1^3*L2*m2*m3*q1_p^2*sin(q2) + 80*I1_zz*L2^3*L3*m2*m3*q1_p^2*sin(q3) + 80*I1_zz*L2^3*L3*m2*m3*q2_p^2*sin(q3) + 160*I1_zz*L2*L3^3*m3^2*q1_p*q2_p*sin(q3) + 640*I1_zz*L2^3*L3*m3^2*q1_p*q2_p*sin(q3) + 160*I1_zz*L2*L3^3*m3^2*q1_p*q3_p*sin(q3) + 160*I1_zz*L2*L3^3*m3^2*q2_p*q3_p*sin(q3) + 160*I1_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 + q3) - 80*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2) + 160*I2_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) + 160*I2_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(q3) + 160*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(q3) + 320*I1_zz*I2_zz*L1*L3*m3*q1_p^2*sin(q2 + q3) - 160*I1_zz*L1*L2^2*L3*m3^2*q1_p^2*sin(q2 - q3) + 80*I1_zz*L1*L2*L3^2*m3^2*q1_p^2*sin(q2 + 2*q3) + 160*I2_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) + 160*I2_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m3^2*q1_p^2*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m3^2*q2_p^2*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m3^2*q3_p^2*sin(2*q2 + q3) - 320*I1_zz*I3_zz*L1*L2*m2*q1_p^2*sin(q2) - 640*I1_zz*I3_zz*L1*L2*m3*q1_p^2*sin(q2) + 320*I1_zz*I2_zz*L2*L3*m3*q1_p^2*sin(q3) + 320*I1_zz*I2_zz*L2*L3*m3*q2_p^2*sin(q3) + 320*I1_zz*I3_zz*L2*L3*m3*q1_p^2*sin(q3) + 320*I1_zz*I3_zz*L2*L3*m3*q2_p^2*sin(q3) + 320*I1_zz*I3_zz*L2*L3*m3*q3_p^2*sin(q3) + 40*L1^2*L2^2*L3^2*m1*m3^2*q1_p^2*sin(2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2) - 20*L1^2*L2^2*L3^2*m2^2*m3*q1_p^2*sin(2*q2) + 40*L1^2*L2^2*L3^2*m1*m3^2*q2_p^2*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2) - 20*L1^2*L2^2*L3^2*m2^2*m3*q2_p^2*sin(2*q2) + 20*L1^2*L2^2*L3^2*m1*m3^2*q3_p^2*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q3) + 40*L1^2*L2^2*L3^2*m2*m3^2*q3_p^2*sin(2*q3) + 40*L1^3*L2^2*L3*m1*m3^2*q1_p^2*sin(q2 + q3) - 40*L1^3*L2^2*L3*m2^2*m3*q1_p^2*sin(q2 + q3) - 80*L1*L2*L3^2*m2*m3*tau1*cos(q2) + 80*L1*L2*L3^2*m2*m3*tau2*cos(q2) + 80*L1^2*L2*L3*m1*m3*tau2*cos(q3) - 160*L1^2*L2*L3*m1*m3*tau3*cos(q3) + 240*L1^2*L2*L3*m2*m3*tau2*cos(q3) - 480*L1^2*L2*L3*m2*m3*tau3*cos(q3) - 20*L1^2*L2^2*L3^2*m2*m3^2*q1_p^2*sin(2*q2 + 2*q3) - 20*L1^2*L2^2*L3^2*m2*m3^2*q2_p^2*sin(2*q2 + 2*q3) - 20*L1^2*L2^2*L3^2*m2*m3^2*q3_p^2*sin(2*q2 + 2*q3) - 320*I3_zz*L1^2*L2^2*m2*m3*q1_p^2*sin(2*q2) - 320*I3_zz*L1^2*L2^2*m2*m3*q2_p^2*sin(2*q2) - 20*L1^3*L2*L3^2*m1*m3^2*q1_p^2*sin(q2) + 20*L1^2*L2*L3^3*m1*m3^2*q1_p^2*sin(q3) + 80*L1^2*L2^3*L3*m1*m3^2*q1_p^2*sin(q3) - 120*L1^3*L2*L3^2*m2*m3^2*q1_p^2*sin(q2) - 80*L1^3*L2*L3^2*m2^2*m3*q1_p^2*sin(q2) + 20*L1^2*L2*L3^3*m1*m3^2*q2_p^2*sin(q3) + 60*L1^2*L2*L3^3*m2*m3^2*q1_p^2*sin(q3) + 80*L1^2*L2^3*L3*m1*m3^2*q2_p^2*sin(q3) + 120*L1^2*L2^3*L3*m2*m3^2*q1_p^2*sin(q3) + 20*L1^2*L2^3*L3*m2^2*m3*q1_p^2*sin(q3) + 20*L1^2*L2*L3^3*m1*m3^2*q3_p^2*sin(q3) + 60*L1^2*L2*L3^3*m2*m3^2*q2_p^2*sin(q3) + 120*L1^2*L2^3*L3*m2*m3^2*q2_p^2*sin(q3) + 20*L1^2*L2^3*L3*m2^2*m3*q2_p^2*sin(q3) + 60*L1^2*L2*L3^3*m2*m3^2*q3_p^2*sin(q3) - 160*I3_zz*L1^2*L2^2*m2^2*q1_p*q2_p*sin(2*q2) - 640*I3_zz*L1^2*L2^2*m3^2*q1_p*q2_p*sin(2*q2) + 320*I1_zz*L2^2*L3^2*m3^2*q1_p*q2_p*sin(2*q3) + 160*I1_zz*L2^2*L3^2*m3^2*q1_p*q3_p*sin(2*q3) + 160*I1_zz*L2^2*L3^2*m3^2*q2_p*q3_p*sin(2*q3) - 80*L1*L2^2*L3*m2*m3*tau1*cos(q2 - q3) + 80*L1*L2^2*L3*m2*m3*tau2*cos(q2 - q3) - 80*L1^2*L2*L3*m2*m3*tau2*cos(2*q2 + q3) + 160*L1^2*L2*L3*m2*m3*tau3*cos(2*q2 + q3) + 80*I2_zz*L1^3*L3*m1*m3*q1_p^2*sin(q2 + q3) + 320*I2_zz*L1^3*L3*m2*m3*q1_p^2*sin(q2 + q3) + 40*L1^2*L2*L3^3*m1*m3^2*q1_p*q2_p*sin(q3) + 160*L1^2*L2^3*L3*m1*m3^2*q1_p*q2_p*sin(q3) + 40*L1^2*L2*L3^3*m1*m3^2*q1_p*q3_p*sin(q3) + 120*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(q3) + 240*L1^2*L2^3*L3*m2*m3^2*q1_p*q2_p*sin(q3) + 40*L1^2*L2^3*L3*m2^2*m3*q1_p*q2_p*sin(q3) + 40*L1^2*L2*L3^3*m1*m3^2*q2_p*q3_p*sin(q3) + 120*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(q3) + 120*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(q3) - 20*L1^3*L2^2*L3*m1*m2*m3*q1_p^2*sin(q2 - q3) - 40*L1^2*L2*L3^3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 80*L1^2*L2^3*L3*m2*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 40*L1^2*L2^3*L3*m2^2*m3*q1_p*q2_p*sin(2*q2 + q3) - 40*L1^2*L2*L3^3*m2*m3^2*q1_p*q3_p*sin(2*q2 + q3) - 40*L1^2*L2*L3^3*m2*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 160*I1_zz*L2^3*L3*m2*m3*q1_p*q2_p*sin(q3) - 80*I1_zz*L1*L2*L3^2*m2*m3*q1_p^2*sin(q2) + 80*I2_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) + 80*I2_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) + 240*I2_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) + 80*I3_zz*L1^2*L2*L3*m1*m3*q1_p^2*sin(q3) + 240*I2_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) + 80*I3_zz*L1^2*L2*L3*m1*m3*q2_p^2*sin(q3) + 240*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(q3) + 80*I3_zz*L1^2*L2*L3*m1*m3*q3_p^2*sin(q3) + 240*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(q3) + 240*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(q3) + 320*I2_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(q3) + 320*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(q3) - 80*I1_zz*L1*L2^2*L3*m2*m3*q1_p^2*sin(q2 - q3) + 80*I2_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) + 80*I2_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) - 80*I3_zz*L1^2*L2*L3*m2*m3*q1_p^2*sin(2*q2 + q3) - 80*I3_zz*L1^2*L2*L3*m2*m3*q2_p^2*sin(2*q2 + q3) - 80*I3_zz*L1^2*L2*L3*m2*m3*q3_p^2*sin(2*q2 + q3) + 320*I2_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q2_p*sin(2*q2 + q3) - 320*I3_zz*L1^2*L2*L3*m3^2*q1_p*q3_p*sin(2*q2 + q3) - 320*I3_zz*L1^2*L2*L3*m3^2*q2_p*q3_p*sin(2*q2 + q3) + 640*I1_zz*I2_zz*L2*L3*m3*q1_p*q2_p*sin(q3) + 640*I1_zz*I3_zz*L2*L3*m3*q1_p*q2_p*sin(q3) + 640*I1_zz*I3_zz*L2*L3*m3*q1_p*q3_p*sin(q3) + 640*I1_zz*I3_zz*L2*L3*m3*q2_p*q3_p*sin(q3) + 80*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q2_p*sin(2*q3) - 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2) - 40*L1^2*L2^2*L3^2*m2^2*m3*q1_p*q2_p*sin(2*q2) + 40*L1^2*L2^2*L3^2*m1*m3^2*q1_p*q3_p*sin(2*q3) + 160*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q3) + 40*L1^2*L2^2*L3^2*m1*m3^2*q2_p*q3_p*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q3_p*sin(2*q3) + 80*L1^2*L2^2*L3^2*m2*m3^2*q2_p*q3_p*sin(2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q2_p*sin(2*q2 + 2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q1_p*q3_p*sin(2*q2 + 2*q3) - 40*L1^2*L2^2*L3^2*m2*m3^2*q2_p*q3_p*sin(2*q2 + 2*q3) - 20*L1^3*L2*L3^2*m1*m2*m3*q1_p^2*sin(q2) + 20*L1^2*L2^3*L3*m1*m2*m3*q1_p^2*sin(q3) + 20*L1^2*L2^3*L3*m1*m2*m3*q2_p^2*sin(q3) - 640*I3_zz*L1^2*L2^2*m2*m3*q1_p*q2_p*sin(2*q2) + 40*L1^2*L2^3*L3*m1*m2*m3*q1_p*q2_p*sin(q3) + 160*I2_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) + 480*I2_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) + 160*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q2_p*sin(q3) + 160*I3_zz*L1^2*L2*L3*m1*m3*q1_p*q3_p*sin(q3) + 480*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(q3) + 160*I3_zz*L1^2*L2*L3*m1*m3*q2_p*q3_p*sin(q3) + 480*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(q3) + 480*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(q3) + 160*I2_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q2_p*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m2*m3*q1_p*q3_p*sin(2*q2 + q3) - 160*I3_zz*L1^2*L2*L3*m2*m3*q2_p*q3_p*sin(2*q2 + q3))/(10*(64*I1_zz*I2_zz*I3_zz + 16*I2_zz*I3_zz*L1^2*m1 + 16*I1_zz*I3_zz*L2^2*m2 + 64*I2_zz*I3_zz*L1^2*m2 + 16*I1_zz*I2_zz*L3^2*m3 + 64*I1_zz*I3_zz*L2^2*m3 + 64*I2_zz*I3_zz*L1^2*m3 + 8*I3_zz*L1^2*L2^2*m2^2 + 8*I1_zz*L2^2*L3^2*m3^2 + 8*I2_zz*L1^2*L3^2*m3^2 + 32*I3_zz*L1^2*L2^2*m3^2 - 8*I2_zz*L1^2*L3^2*m3^2*cos(2*q2 + 2*q3) + 2*L1^2*L2^2*L3^2*m1*m3^2 + 6*L1^2*L2^2*L3^2*m2*m3^2 + 2*L1^2*L2^2*L3^2*m2^2*m3 + 4*I3_zz*L1^2*L2^2*m1*m2 + 4*I2_zz*L1^2*L3^2*m1*m3 + 16*I3_zz*L1^2*L2^2*m1*m3 + 4*I1_zz*L2^2*L3^2*m2*m3 + 16*I2_zz*L1^2*L3^2*m2*m3 + 48*I3_zz*L1^2*L2^2*m2*m3 - 8*I3_zz*L1^2*L2^2*m2^2*cos(2*q2) - 32*I3_zz*L1^2*L2^2*m3^2*cos(2*q2) - 8*I1_zz*L2^2*L3^2*m3^2*cos(2*q3) - 32*I3_zz*L1^2*L2^2*m2*m3*cos(2*q2) + L1^2*L2^2*L3^2*m1*m2*m3 - 2*L1^2*L2^2*L3^2*m1*m3^2*cos(2*q3) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2) - 2*L1^2*L2^2*L3^2*m2^2*m3*cos(2*q2) - 4*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q3) + 2*L1^2*L2^2*L3^2*m2*m3^2*cos(2*q2 + 2*q3)));


tau1_act = I1_zz*q1_pp + I2_zz*q1_pp + I2_zz*q2_pp + I3_zz*q1_pp + I3_zz*q2_pp + I3_zz*q3_pp + (981*L3*m3*cos(q1 + q2 + q3))/200 + (981*L2*m2*cos(q1 + q2))/200 + (981*L2*m3*cos(q1 + q2))/100 + (L1^2*m1*q1_pp)/4 + L1^2*m2*q1_pp + L1^2*m3*q1_pp + (L2^2*m2*q1_pp)/4 + (L2^2*m2*q2_pp)/4 + L2^2*m3*q1_pp + L2^2*m3*q2_pp + (L3^2*m3*q1_pp)/4 + (L3^2*m3*q2_pp)/4 + (L3^2*m3*q3_pp)/4 + (981*L1*m1*cos(q1))/200 + (981*L1*m2*cos(q1))/100 + (981*L1*m3*cos(q1))/100 - (L1*L2*m2*q2_p^2*sin(q2))/2 - L1*L2*m3*q2_p^2*sin(q2) - (L2*L3*m3*q3_p^2*sin(q3))/2 + L1*L3*m3*q1_pp*cos(q2 + q3) + (L1*L3*m3*q2_pp*cos(q2 + q3))/2 + (L1*L3*m3*q3_pp*cos(q2 + q3))/2 + L1*L2*m2*q1_pp*cos(q2) + (L1*L2*m2*q2_pp*cos(q2))/2 + 2*L1*L2*m3*q1_pp*cos(q2) + L1*L2*m3*q2_pp*cos(q2) + L2*L3*m3*q1_pp*cos(q3) + L2*L3*m3*q2_pp*cos(q3) + (L2*L3*m3*q3_pp*cos(q3))/2 - (L1*L3*m3*q2_p^2*sin(q2 + q3))/2 - (L1*L3*m3*q3_p^2*sin(q2 + q3))/2 - L1*L2*m2*q1_p*q2_p*sin(q2) - 2*L1*L2*m3*q1_p*q2_p*sin(q2) - L2*L3*m3*q1_p*q3_p*sin(q3) - L2*L3*m3*q2_p*q3_p*sin(q3) - L1*L3*m3*q1_p*q2_p*sin(q2 + q3) - L1*L3*m3*q1_p*q3_p*sin(q2 + q3) - L1*L3*m3*q2_p*q3_p*sin(q2 + q3);
tau2_act = I2_zz*q1_pp + I2_zz*q2_pp + I3_zz*q1_pp + I3_zz*q2_pp + I3_zz*q3_pp + (981*L3*m3*cos(q1 + q2 + q3))/200 + (981*L2*m2*cos(q1 + q2))/200 + (981*L2*m3*cos(q1 + q2))/100 + (L2^2*m2*q1_pp)/4 + (L2^2*m2*q2_pp)/4 + L2^2*m3*q1_pp + L2^2*m3*q2_pp + (L3^2*m3*q1_pp)/4 + (L3^2*m3*q2_pp)/4 + (L3^2*m3*q3_pp)/4 + (L1*L2*m2*q1_p^2*sin(q2))/2 + L1*L2*m3*q1_p^2*sin(q2) - (L2*L3*m3*q3_p^2*sin(q3))/2 + (L1*L3*m3*q1_pp*cos(q2 + q3))/2 + (L1*L2*m2*q1_pp*cos(q2))/2 + L1*L2*m3*q1_pp*cos(q2) + L2*L3*m3*q1_pp*cos(q3) + L2*L3*m3*q2_pp*cos(q3) + (L2*L3*m3*q3_pp*cos(q3))/2 + (L1*L3*m3*q1_p^2*sin(q2 + q3))/2 - L2*L3*m3*q1_p*q3_p*sin(q3) - L2*L3*m3*q2_p*q3_p*sin(q3);
tau3_act = I3_zz*q1_pp + I3_zz*q2_pp + I3_zz*q3_pp + (981*L3*m3*cos(q1 + q2 + q3))/200 + (L3^2*m3*q1_pp)/4 + (L3^2*m3*q2_pp)/4 + (L3^2*m3*q3_pp)/4 + (L2*L3*m3*q1_p^2*sin(q3))/2 + (L2*L3*m3*q2_p^2*sin(q3))/2 + (L1*L3*m3*q1_pp*cos(q2 + q3))/2 + (L2*L3*m3*q1_pp*cos(q3))/2 + (L2*L3*m3*q2_pp*cos(q3))/2 + (L1*L3*m3*q1_p^2*sin(q2 + q3))/2 + L2*L3*m3*q1_p*q2_p*sin(q3);

output = [q1_p, q2_p, q3_p, q1_pp, q2_pp, q3_pp, tau1_act, tau2_act, tau3_act];

end

